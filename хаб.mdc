# –ü–õ–ê–ù –†–ï–ê–õ–Ü–ó–ê–¶–Ü–á –ö–û–®–ò–ö–ê PLAY VISION
## –î–µ—Ç–∞–ª—å–Ω–∏–π –ø–ª–∞–Ω –≤–ø—Ä–æ–≤–∞–¥–∂–µ–Ω–Ω—è –∑–≥—ñ–¥–Ω–æ —Å–∫—Ä—ñ–Ω—à–æ—Ç—ñ–≤

---

## üìã –ê–ù–ê–õ–Ü–ó –ü–û–¢–û–ß–ù–û–ì–û –°–¢–ê–ù–£

### ‚úÖ –©–û –í–ñ–ï –Ñ:
- `Cart` —Ç–∞ `CartItem` –º–æ–¥–µ–ª—ñ –∑ –±–∞–∑–æ–≤–∏–º —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª–æ–º
- `CartService` –∑ –ª–æ–≥—ñ–∫–æ—é –¥–æ–¥–∞–≤–∞–Ω–Ω—è/–≤–∏–¥–∞–ª–µ–Ω–Ω—è
- `CartView`, `AddToCartView`, `RemoveFromCartView`
- –ë–∞–∑–æ–≤—ñ API endpoints –¥–ª—è AJAX –æ–ø–µ—Ä–∞—Ü—ñ–π
- –°–∏—Å—Ç–µ–º–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π `CartRecommendation`

### ‚ùå –©–û –ü–û–¢–†–Ü–ë–ù–û –î–û–†–û–ë–ò–¢–ò:
- –ü–æ–≤–Ω–∏–π —Ä–µ–¥–∏–∑–∞–π–Ω —à–∞–±–ª–æ–Ω—É –∫–æ—à–∏–∫–∞
- –î–æ–¥–∞–≤–∞–Ω–Ω—è –ø–æ–ª—ñ–≤ –¥–ª—è —Ç–µ–≥—ñ–≤, badges, —Ç–∏–ø—ñ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç—É
- –°–∏—Å—Ç–µ–º–∞ —á–∞–π–æ–≤–∏—Ö –¥–ª—è –∞–≤—Ç–æ—Ä—ñ–≤
- –ü–æ–∫—Ä–∞—â–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–º–æ–∫–æ–¥—ñ–≤
- –ü—ñ–¥–ø–∏—Å–æ—á–Ω—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –≤ –∫–æ—à–∏–∫—É
- –ú–æ–±—ñ–ª—å–Ω–∞ –∞–¥–∞–ø—Ç–∞—Ü—ñ—è

---

## üéØ –ï–¢–ê–ü 1: –†–û–ó–®–ò–†–ï–ù–ù–Ø –ú–û–î–ï–õ–ï–ô (–ë–ï–ó –õ–ê–ú–ê–ù–ù–Ø –§–£–ù–ö–¶–Ü–û–ù–ê–õ–£)

### 1.1 –î–æ—Ä–æ–±–∫–∞ –º–æ–¥–µ–ª—ñ CartItem
```python
# apps/cart/models.py - –î–û–î–ê–¢–ò –ø–æ–ª—è:

class CartItem(models.Model):
    # ... —ñ—Å–Ω—É—é—á—ñ –ø–æ–ª—è ...
    
    # –î–û–î–ê–¢–ö–û–í–Ü –ü–û–õ–Ø (–Ω–æ–≤—ñ)
    content_type_display = models.CharField(max_length=50, blank=True, 
                                          help_text='VIDEO ‚Ä¢ 95 –•–í, PDF, etc')
    thumbnail_url = models.URLField(blank=True, help_text='Product thumbnail')
    
    # Metadata –∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –æ–±'—î–∫—Ç–∞ (JSON –¥–ª—è –≥–Ω—É—á–∫–æ—Å—Ç—ñ)
    item_metadata = models.JSONField(default=dict, help_text='Tags, badges, etc')
    # –ü—Ä–∏–∫–ª–∞–¥: {"tags": ["—Ç—Ä–µ–Ω–µ—Ä", "–∞–Ω–∞–ª—ñ—Ç–∏–∫"], "badges": ["—Ç–æ–ø-–ø—Ä–æ–¥–∞–∂—ñ–≤"], "duration": "95 —Ö–≤"}
    
    def get_display_tags(self):
        """–û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–µ–≥–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è"""
        return self.item_metadata.get('tags', [])
    
    def get_display_badges(self):
        """–û—Ç—Ä–∏–º–∞—Ç–∏ badges –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è"""
        return self.item_metadata.get('badges', [])
    
    def get_content_type_display(self):
        """–û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç—É –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è"""
        if self.content_type_display:
            return self.content_type_display
        
        # Fallback –¥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó
        item_obj = self.get_item_object()
        if hasattr(item_obj, 'get_content_type_display'):
            return item_obj.get_content_type_display()
        return ''
```

### 1.2 –†–æ–∑—à–∏—Ä–µ–Ω–Ω—è –º–æ–¥–µ–ª—ñ Cart
```python
# apps/cart/models.py - –î–û–î–ê–¢–ò –ø–æ–ª—è:

class Cart(models.Model):
    # ... —ñ—Å–Ω—É—é—á—ñ –ø–æ–ª—è ...
    
    # –ù–û–í–Ü –ü–û–õ–Ø
    applied_coupon = models.ForeignKey('payments.Coupon', null=True, blank=True, 
                                     on_delete=models.SET_NULL)
    discount_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0)
    tips_amount = models.DecimalField(max_digits=10, decimal_places=2, default=0, 
                                    help_text='–ß–∞–π–æ–≤—ñ –∞–≤—Ç–æ—Ä–∞–º')
    
    def get_subtotal(self):
        """–ü—Ä–æ–º—ñ–∂–Ω–∞ —Å—É–º–∞ –±–µ–∑ –∑–Ω–∏–∂–æ–∫"""
        return sum(item.get_total() for item in self.items.all())
    
    def get_total_with_discount(self):
        """–°—É–º–∞ –∑—ñ –∑–Ω–∏–∂–∫–æ—é"""
        subtotal = self.get_subtotal()
        return subtotal - self.discount_amount + self.tips_amount
    
    def get_discount_percentage(self):
        """–í—ñ–¥—Å–æ—Ç–æ–∫ –∑–Ω–∏–∂–∫–∏"""
        subtotal = self.get_subtotal()
        if subtotal > 0:
            return round((self.discount_amount / subtotal) * 100, 1)
        return 0
```

### 1.3 –ú—ñ–≥—Ä–∞—Ü—ñ—è
```bash
# –°—Ç–≤–æ—Ä–∏—Ç–∏ –º—ñ–≥—Ä–∞—Ü—ñ—é –±–µ–∑ –ª–∞–º–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É
python manage.py makemigrations cart --name add_cart_display_fields
python manage.py migrate
```

---

## üéØ –ï–¢–ê–ü 2: –î–û–†–û–ë–ö–ê –°–ï–†–í–Ü–°–Ü–í

### 2.1 –†–æ–∑—à–∏—Ä–µ–Ω–Ω—è CartService
```python
# apps/cart/services.py - –î–û–†–û–ë–ò–¢–ò –º–µ—Ç–æ–¥–∏:

class CartService:
    # ... —ñ—Å–Ω—É—é—á—ñ –º–µ—Ç–æ–¥–∏ ...
    
    def add_course(self, course, quantity=1):
        """–î–æ–¥–∞–≤–∞–Ω–Ω—è –∫—É—Ä—Å—É –∑ –ø–æ–≤–Ω–∏–º–∏ –º–µ—Ç–∞–¥–∞–Ω–∏–º–∏"""
        # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –º–µ—Ç–∞–¥–∞–Ω–∏—Ö –∑ –∫—É—Ä—Å—É
        metadata = {
            'tags': list(course.tags.values_list('name', flat=True)),
            'badges': self._get_course_badges(course),
            'duration': f"{course.duration_minutes} —Ö–≤" if course.duration_minutes else '',
            'difficulty': course.get_difficulty_display()
        }
        
        content_type_display = self._get_course_content_type(course)
        
        item, created = self.cart.items.get_or_create(
            item_type='course',
            item_id=course.id,
            defaults={
                'item_name': course.title,
                'price': course.price,
                'quantity': quantity,
                'content_type_display': content_type_display,
                'thumbnail_url': course.thumbnail.url if course.thumbnail else '',
                'item_metadata': metadata
            }
        )
        
        if not created:
            item.quantity += quantity
            item.save()
        
        return item
    
    def _get_course_badges(self, course):
        """–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è badges –¥–ª—è –∫—É—Ä—Å—É"""
        badges = []
        if course.is_featured:
            badges.append('—Ç–æ–ø-–ø—Ä–æ–¥–∞–∂—ñ–≤')
        if course.created_at > timezone.now() - timedelta(days=30):
            badges.append('–Ω–æ–≤–∏–Ω–∫–∞')
        return badges
    
    def _get_course_content_type(self, course):
        """–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ç–∏–ø—É –∫–æ–Ω—Ç–µ–Ω—Ç—É"""
        materials = course.materials.all()
        if materials.filter(content_type='video').exists():
            total_duration = sum(m.video_duration_seconds for m in materials if m.video_duration_seconds)
            minutes = total_duration // 60
            return f"VIDEO ‚Ä¢ {minutes} –•–í"
        elif materials.filter(content_type='pdf').exists():
            return "PDF"
        elif materials.filter(content_type='article').exists():
            return "–°–¢–ê–¢–¢–Ø"
        return "–ö–£–†–°"
    
    def apply_coupon(self, coupon_code):
        """–ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –ø—Ä–æ–º–æ–∫–æ–¥—É"""
        from apps.payments.models import Coupon
        
        try:
            coupon = Coupon.objects.get(code=coupon_code.upper(), is_active=True)
            if not coupon.is_valid:
                return False, "–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ–¥—ñ–π—Å–Ω–∏–π –∞–±–æ –∑–∞–∫—ñ–Ω—á–∏–≤—Å—è"
            
            subtotal = self.cart.get_subtotal()
            if subtotal < coupon.min_amount:
                return False, f"–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: ${coupon.min_amount}"
            
            # –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –∑–Ω–∏–∂–∫–∏
            if coupon.discount_type == 'percentage':
                discount = subtotal * (coupon.discount_value / 100)
            else:
                discount = coupon.discount_value
            
            self.cart.applied_coupon = coupon
            self.cart.discount_amount = min(discount, subtotal)  # –ù–µ –±—ñ–ª—å—à–µ —Å—É–º–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
            self.cart.save()
            
            return True, f"–ü—Ä–æ–º–æ–∫–æ–¥ –∑–∞—Å—Ç–æ—Å–æ–≤–∞–Ω–æ! –ó–Ω–∏–∂–∫–∞: ${self.cart.discount_amount}"
            
        except Coupon.DoesNotExist:
            return False, "–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
    
    def set_tips(self, tips_amount):
        """–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —á–∞–π–æ–≤–∏—Ö"""
        if tips_amount >= 0:
            self.cart.tips_amount = Decimal(str(tips_amount))
            self.cart.save()
            return True
        return False
```

### 2.2 –ù–æ–≤–∏–π SubscriptionSuggestionService
```python
# apps/cart/services.py - –î–û–†–û–ë–ò–¢–ò:

class SubscriptionSuggestionService:
    def get_suggestion_data(self, cart):
        """–û—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –¥–ª—è –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –ø—ñ–¥–ø–∏—Å–∫–∏"""
        from apps.subscriptions.models import Plan
        
        cart_total = cart.get_subtotal()
        
        # –ó–Ω–∞–π—Ç–∏ –Ω–∞–π–∫—Ä–∞—â–∏–π –ø–ª–∞–Ω
        suggested_plan = Plan.objects.filter(
            is_active=True,
            price__lte=cart_total * 1.2  # –î–æ 20% –¥–æ—Ä–æ–∂—á–µ –≤—ñ–¥ –∫–æ—à–∏–∫–∞
        ).order_by('-price').first()
        
        if not suggested_plan:
            suggested_plan = Plan.objects.filter(is_active=True).order_by('price').first()
        
        if suggested_plan:
            savings = cart_total - suggested_plan.price
            return {
                'show_suggestion': True,
                'plan': suggested_plan,
                'message': f"–ø–µ—Ä–µ–¥–ø–ª–∞—Ç—É –∑–∞ ${suggested_plan.price}/3 –º—ñ—Å",
                'savings': max(savings, 0),
                'description': "—Ü–µ –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–≥—ñ–¥–Ω—ñ—à–µ, –Ω—ñ–∂ —Ä–∞–∑–æ–≤—ñ –ø–æ–∫—É–ø–∫–∏."
            }
        
        return {'show_suggestion': False}
```

---

## üéØ –ï–¢–ê–ü 3: –°–¢–í–û–†–ï–ù–ù–Ø CSS –ö–û–ú–ü–û–ù–ï–ù–¢–Ü–í

### 3.1 –°—Ç–≤–æ—Ä–µ–Ω–Ω—è cart.css (–ë–ï–ó !important)
```css
/* static/css/components/cart.css */

/* –ö–ê–†–¢–ö–ê –ö–û–®–ò–ö–ê */
.cart-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: var(--spacing-lg);
    display: grid;
    grid-template-columns: 1fr 400px;
    gap: var(--spacing-xl);
}

.cart-header {
    background: var(--color-primary);
    color: white;
    padding: var(--spacing-lg);
    border-radius: 8px 8px 0 0;
    margin: calc(-1 * var(--spacing-lg)) calc(-1 * var(--spacing-lg)) 0;
    font-size: 1.5rem;
    font-weight: 600;
}

.cart-items {
    background: white;
    border-radius: 0 0 8px 8px;
    overflow: hidden;
}

/* –¢–û–í–ê–† –í –ö–û–®–ò–ö–£ */
.cart-item {
    display: flex;
    align-items: flex-start;
    gap: var(--spacing-md);
    padding: var(--spacing-lg);
    border-bottom: 1px solid var(--color-border);
}

.cart-item:last-child {
    border-bottom: none;
}

.cart-item-thumbnail {
    width: 80px;
    height: 80px;
    background: var(--color-bg-gray);
    border-radius: 6px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.75rem;
    color: var(--color-text-light);
    flex-shrink: 0;
}

.cart-item-content {
    flex: 1;
    min-width: 0;
}

.cart-item-header {
    display: flex;
    justify-content: between;
    align-items: flex-start;
    margin-bottom: var(--spacing-sm);
}

.cart-item-title {
    font-weight: 600;
    margin-bottom: var(--spacing-xs);
    line-height: 1.3;
}

.cart-item-type {
    font-size: 0.875rem;
    color: var(--color-text-light);
    margin-bottom: var(--spacing-sm);
}

.cart-item-tags {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-xs);
    margin-bottom: var(--spacing-sm);
}

.cart-item-tag {
    background: var(--color-bg-gray);
    color: var(--color-text);
    padding: 2px 8px;
    border-radius: 12px;
    font-size: 0.75rem;
    font-weight: 500;
}

.cart-item-badges {
    display: flex;
    gap: var(--spacing-xs);
    margin-bottom: var(--spacing-sm);
}

.cart-item-badge {
    padding: 3px 8px;
    border-radius: 4px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: lowercase;
}

.cart-item-badge--top {
    background: rgba(244, 67, 54, 0.1);
    color: #d32f2f;
}

.cart-item-badge--new {
    background: rgba(76, 175, 80, 0.1);
    color: #388e3c;
}

.cart-item-controls {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-top: var(--spacing-sm);
}

.cart-item-quantity {
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
    background: var(--color-bg-gray);
    border-radius: 20px;
    padding: 4px;
}

.cart-quantity-btn {
    width: 32px;
    height: 32px;
    border: none;
    background: transparent;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: background-color 0.2s ease;
}

.cart-quantity-btn:hover {
    background: rgba(0, 0, 0, 0.1);
}

.cart-quantity-input {
    border: none;
    background: transparent;
    text-align: center;
    width: 40px;
    font-weight: 600;
}

.cart-item-price {
    font-size: 1.25rem;
    font-weight: 700;
    color: var(--color-primary);
}

.cart-item-remove {
    background: none;
    border: none;
    color: var(--color-primary);
    font-size: 0.875rem;
    cursor: pointer;
    padding: var(--spacing-xs);
    transition: opacity 0.2s ease;
}

.cart-item-remove:hover {
    opacity: 0.7;
}

/* –†–ï–ö–û–ú–ï–ù–î–ê–¶–Ü–á */
.cart-recommendations {
    background: var(--color-bg-gray);
    border-radius: 8px;
    padding: var(--spacing-lg);
    margin: var(--spacing-lg) 0;
}

.cart-recommendation-title {
    font-weight: 600;
    margin-bottom: var(--spacing-md);
    color: var(--color-text);
}

.cart-recommendation-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--spacing-md);
    background: white;
    border-radius: 6px;
    margin-bottom: var(--spacing-sm);
}

.cart-recommendation-info {
    flex: 1;
}

.cart-recommendation-name {
    font-weight: 500;
    margin-bottom: 4px;
}

.cart-recommendation-meta {
    font-size: 0.875rem;
    color: var(--color-text-light);
}

.cart-recommendation-price {
    font-weight: 600;
    color: var(--color-primary);
    margin-right: var(--spacing-sm);
}

.cart-recommendation-add {
    background: var(--color-primary);
    color: white;
    border: none;
    padding: var(--spacing-xs) var(--spacing-md);
    border-radius: 20px;
    font-size: 0.875rem;
    cursor: pointer;
    transition: background-color 0.2s ease;
}

.cart-recommendation-add:hover {
    background: var(--color-primary-dark);
}

/* –ü–†–û–ú–û–ö–û–î */
.cart-coupon {
    display: flex;
    gap: var(--spacing-sm);
    margin: var(--spacing-lg) 0;
}

.cart-coupon-input {
    flex: 1;
    padding: var(--spacing-sm) var(--spacing-md);
    border: 1px solid var(--color-border);
    border-radius: 6px;
    font-size: 1rem;
}

.cart-coupon-input::placeholder {
    color: var(--color-text-light);
}

.cart-coupon-btn {
    background: var(--color-primary);
    color: white;
    border: none;
    padding: var(--spacing-sm) var(--spacing-lg);
    border-radius: 6px;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.2s ease;
}

.cart-coupon-btn:hover {
    background: var(--color-primary-dark);
}

/* –ü–Ü–î–°–£–ú–û–ö */
.cart-summary {
    background: white;
    border-radius: 8px;
    padding: var(--spacing-lg);
    height: fit-content;
    position: sticky;
    top: 100px;
}

.cart-summary-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: var(--spacing-lg);
}

.cart-summary-line {
    display: flex;
    justify-content: space-between;
    margin-bottom: var(--spacing-md);
    font-size: 1rem;
}

.cart-summary-line.cart-summary-discount .cart-summary-amount {
    color: var(--color-success);
}

.cart-summary-total {
    display: flex;
    justify-content: space-between;
    padding: var(--spacing-md) 0;
    border-top: 1px solid var(--color-border);
    font-size: 1.125rem;
    font-weight: 600;
}

.cart-subscription-suggestion {
    background: rgba(255, 107, 53, 0.1);
    border-radius: 8px;
    padding: var(--spacing-md);
    margin: var(--spacing-lg) 0;
    text-align: center;
}

.cart-subscription-suggestion-text {
    margin-bottom: var(--spacing-sm);
    line-height: 1.4;
}

.cart-subscription-link {
    color: var(--color-primary);
    font-weight: 600;
    text-decoration: underline;
}

.cart-actions {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
    margin-top: var(--spacing-lg);
}

.cart-checkout-btn {
    background: var(--color-primary);
    color: white;
    border: none;
    padding: var(--spacing-md) var(--spacing-lg);
    border-radius: 25px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.2s ease;
}

.cart-checkout-btn:hover {
    background: var(--color-primary-dark);
}

.cart-continue-btn {
    background: white;
    color: var(--color-primary);
    border: 2px solid var(--color-primary);
    padding: var(--spacing-md) var(--spacing-lg);
    border-radius: 25px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
}

.cart-continue-btn:hover {
    background: var(--color-primary);
    color: white;
}

.cart-agreement {
    text-align: center;
    font-size: 0.875rem;
    color: var(--color-text-light);
    margin-top: var(--spacing-md);
}

/* –ú–û–ë–Ü–õ–¨–ù–ê –ê–î–ê–ü–¢–ê–¶–Ü–Ø */
@media (max-width: 768px) {
    .cart-container {
        grid-template-columns: 1fr;
        gap: var(--spacing-lg);
        padding: var(--spacing-md);
    }
    
    .cart-item {
        flex-direction: column;
        gap: var(--spacing-sm);
    }
    
    .cart-item-thumbnail {
        width: 100%;
        height: 60px;
    }
    
    .cart-item-controls {
        flex-direction: column;
        align-items: stretch;
        gap: var(--spacing-sm);
    }
    
    .cart-summary {
        position: static;
        order: -1;
    }
    
    .cart-coupon {
        flex-direction: column;
    }
}
```

---

## üéØ –ï–¢–ê–ü 4: –°–¢–í–û–†–ï–ù–ù–Ø –®–ê–ë–õ–û–ù–£

### 4.1 –ü–æ–≤–Ω–∏–π —à–∞–±–ª–æ–Ω –∫–æ—à–∏–∫–∞
```html
<!-- templates/cart/cart.html -->
{% extends 'base/base.html' %}
{% load static %}

{% block title %}–ö–æ—à–∏–∫ - Play Vision{% endblock %}

{% block extra_css %}
<link rel="stylesheet" href="{% static 'css/components/cart.css' %}">
{% endblock %}

{% block content %}
<div class="cart-container">
    <!-- –û–°–ù–û–í–ù–ê –ß–ê–°–¢–ò–ù–ê –ö–û–®–ò–ö–ê -->
    <div class="cart-main">
        <div class="cart-items">
            <div class="cart-header">
                –ö–æ—à–∏–∫
            </div>
            
            {% if cart_items %}
                {% for item in cart_items %}
                <div class="cart-item" data-item-id="{{ item.id }}">
                    <div class="cart-item-thumbnail">
                        {% if item.thumbnail_url %}
                        <img src="{{ item.thumbnail_url }}" alt="{{ item.item_name }}">
                        {% else %}
                        –û–±–∫–ª.
                        {% endif %}
                    </div>
                    
                    <div class="cart-item-content">
                        <div class="cart-item-header">
                            <div>
                                <h3 class="cart-item-title">{{ item.item_name }}</h3>
                                
                                {% if item.get_content_type_display %}
                                <div class="cart-item-type">{{ item.get_content_type_display }}</div>
                                {% endif %}
                                
                                {% if item.get_display_tags %}
                                <div class="cart-item-tags">
                                    {% for tag in item.get_display_tags %}
                                    <span class="cart-item-tag">{{ tag }}</span>
                                    {% endfor %}
                                </div>
                                {% endif %}
                                
                                {% if item.get_display_badges %}
                                <div class="cart-item-badges">
                                    {% for badge in item.get_display_badges %}
                                    <span class="cart-item-badge cart-item-badge--{% if badge == '—Ç–æ–ø-–ø—Ä–æ–¥–∞–∂—ñ–≤' %}top{% elif badge == '–Ω–æ–≤–∏–Ω–∫–∞' %}new{% endif %}">
                                        {{ badge }}
                                    </span>
                                    {% endfor %}
                                </div>
                                {% endif %}
                            </div>
                            
                            <button class="cart-item-remove" data-action="remove" data-item-id="{{ item.id }}">
                                –í–∏–¥–∞–ª–∏—Ç–∏
                            </button>
                        </div>
                        
                        <div class="cart-item-controls">
                            <div class="cart-item-quantity">
                                <button class="cart-quantity-btn" data-action="decrease" data-item-id="{{ item.id }}">‚àí</button>
                                <input type="number" class="cart-quantity-input" value="{{ item.quantity }}" min="1" readonly>
                                <button class="cart-quantity-btn" data-action="increase" data-item-id="{{ item.id }}">+</button>
                            </div>
                            
                            <div class="cart-item-price">${{ item.get_total }}</div>
                        </div>
                    </div>
                </div>
                {% endfor %}
                
                <!-- –†–ï–ö–û–ú–ï–ù–î–ê–¶–Ü–á -->
                {% if recommendations %}
                <div class="cart-recommendations">
                    <div class="cart-recommendation-title">–Ü–¥–µ–∞–ª—å–Ω–∏–π –¥–æ–¥–∞—Ç–æ–∫ –¥–æ –∫–æ—à–∏–∫–∞</div>
                    {% for rec in recommendations %}
                    <div class="cart-recommendation-item">
                        <div class="cart-recommendation-info">
                            <div class="cart-recommendation-name">{{ rec.title }}</div>
                            <div class="cart-recommendation-meta">{{ rec.short_description }}</div>
                        </div>
                        <div class="cart-recommendation-price">${{ rec.price }}</div>
                        <button class="cart-recommendation-add" data-action="add-recommendation" data-course-id="{{ rec.id }}">
                            + –î–æ–¥–∞—Ç–∏
                        </button>
                    </div>
                    {% endfor %}
                </div>
                {% endif %}
                
                <!-- –ü–†–û–ú–û–ö–û–î -->
                <div class="cart-coupon">
                    <input type="text" class="cart-coupon-input" placeholder="–í–≤–µ–¥—ñ—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥" id="coupon-input">
                    <button class="cart-coupon-btn" id="apply-coupon">–ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏</button>
                </div>
                
            {% else %}
                <div class="cart-empty">
                    <p>–í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π</p>
                    <a href="{% url 'content:course_list' %}" class="btn btn-primary">–ü–µ—Ä–µ–π—Ç–∏ –¥–æ –∫—É—Ä—Å—ñ–≤</a>
                </div>
            {% endif %}
        </div>
    </div>
    
    <!-- –ü–Ü–î–°–£–ú–û–ö -->
    {% if cart_items %}
    <div class="cart-summary">
        <h3 class="cart-summary-title">–ü—ñ–¥—Å—É–º–æ–∫</h3>
        
        <div class="cart-summary-line">
            <span>–ü—Ä–æ–º—ñ–∂–Ω–∞ —Å—É–º–∞</span>
            <span class="cart-summary-amount">${{ cart.get_subtotal }}</span>
        </div>
        
        <div class="cart-summary-line cart-summary-discount">
            <span>–ó–Ω–∏–∂–∫–∞</span>
            <span class="cart-summary-amount">-${{ cart.discount_amount|default:0 }}</span>
        </div>
        
        <div class="cart-summary-line">
            <span>–ß–∞–π–æ–≤—ñ –∞–≤—Ç–æ—Ä–∞–º</span>
            <span class="cart-summary-amount">${{ cart.tips_amount|default:0 }}</span>
        </div>
        
        <div class="cart-summary-total">
            <span>–î–æ —Å–ø–ª–∞—Ç–∏</span>
            <span>${{ cart.get_total_with_discount }}</span>
        </div>
        
        <!-- –ü–†–û–ü–û–ó–ò–¶–Ü–Ø –ü–Ü–î–ü–ò–°–ö–ò -->
        {% if show_suggestion %}
        <div class="cart-subscription-suggestion">
            <div class="cart-subscription-suggestion-text">
                –†–æ–∑–≥–ª—è–Ω—å—Ç–µ <a href="{% url 'subscriptions:pricing' %}" class="cart-subscription-link">{{ suggestion_data.message }}</a> ‚Äî 
                —Ü–µ –º–æ–∂–µ –±—É—Ç–∏ –≤–∏–≥—ñ–¥–Ω—ñ—à–µ, –Ω—ñ–∂ —Ä–∞–∑–æ–≤—ñ –ø–æ–∫—É–ø–∫–∏.
            </div>
        </div>
        {% endif %}
        
        <div class="cart-actions">
            <button class="cart-checkout-btn" onclick="window.location.href='{% url 'payments:checkout' %}'">
                –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –æ–ø–ª–∞—Ç–∏
            </button>
            
            <button class="cart-continue-btn" onclick="window.location.href='{% url 'content:course_list' %}'">
                –ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –ø–æ–∫—É–ø–∫–∏
            </button>
        </div>
        
        <div class="cart-agreement">
            –ù–∞—Ç–∏—Å–∫–∞—é—á–∏ ¬´–ü–µ—Ä–µ–π—Ç–∏ –¥–æ –æ–ø–ª–∞—Ç–∏¬ª, –≤–∏ –ø–æ–≥–æ–¥–∂—É—î—Ç–µ—Å—å –∑ –û—Ñ–µ—Ä—Ç–æ—é
        </div>
    </div>
    {% endif %}
</div>
{% endblock %}

{% block extra_js %}
<script src="{% static 'js/components/cart.js' %}"></script>
{% endblock %}
```

---

## üéØ –ï–¢–ê–ü 5: JAVASCRIPT –§–£–ù–ö–¶–Ü–û–ù–ê–õ

### 5.1 –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –∫–æ—à–∏–∫–∞
```javascript
// static/js/components/cart.js

class Cart {
    constructor() {
        this.init();
    }
    
    init() {
        // –û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
        document.addEventListener('click', this.handleClick.bind(this));
        document.getElementById('apply-coupon')?.addEventListener('click', this.applyCoupon.bind(this));
    }
    
    handleClick(e) {
        const action = e.target.dataset.action;
        const itemId = e.target.dataset.itemId;
        
        switch(action) {
            case 'increase':
                this.updateQuantity(itemId, 1);
                break;
            case 'decrease':
                this.updateQuantity(itemId, -1);
                break;
            case 'remove':
                this.removeItem(itemId);
                break;
            case 'add-recommendation':
                this.addRecommendation(e.target.dataset.courseId);
                break;
        }
    }
    
    async updateQuantity(itemId, change) {
        try {
            const response = await fetch(`/api/v1/cart/update/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRFToken': this.getCSRFToken()
                },
                body: JSON.stringify({
                    item_id: itemId,
                    quantity_change: change
                })
            });
            
            const data = await response.json();
            if (data.success) {
                this.updateCartDisplay(data);
            } else {
                this.showError(data.message);
            }
        } catch (error) {
            this.showError('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ—à–∏–∫–∞');
        }
    }
    
    async removeItem(itemId) {
        try {
            const response = await fetch(`/cart/remove/${itemId}/`, {
                method: 'POST',
                headers: {
                    'X-CSRFToken': this.getCSRFToken()
                }
            });
            
            const data = await response.json();
            if (data.success) {
                // –í–∏–¥–∞–ª–∏—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç –∑ DOM
                document.querySelector(`[data-item-id="${itemId}"]`).remove();
                this.updateSummary(data);
                this.showSuccess(data.message);
            } else {
                this.showError(data.message);
            }
        } catch (error) {
            this.showError('–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É');
        }
    }
    
    async applyCoupon() {
        const code = document.getElementById('coupon-input').value.trim();
        if (!code) return;
        
        try {
            const response = await fetch(`/api/v1/cart/apply-coupon/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRFToken': this.getCSRFToken()
                },
                body: JSON.stringify({ code })
            });
            
            const data = await response.json();
            if (data.success) {
                this.updateSummary(data);
                this.showSuccess(data.message);
                document.getElementById('coupon-input').value = '';
            } else {
                this.showError(data.message);
            }
        } catch (error) {
            this.showError('–ü–æ–º–∏–ª–∫–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –ø—Ä–æ–º–æ–∫–æ–¥—É');
        }
    }
    
    updateCartDisplay(data) {
        // –û–Ω–æ–≤–∏—Ç–∏ –ª—ñ—á–∏–ª—å–Ω–∏–∫–∏, —Å—É–º–∏, —Ç–æ—â–æ
        if (data.cart_total !== undefined) {
            document.querySelector('.cart-summary-total span:last-child').textContent = `$${data.cart_total}`;
        }
    }
    
    updateSummary(data) {
        // –û–Ω–æ–≤–∏—Ç–∏ –ø—ñ–¥—Å—É–º–æ–∫
        const summaryElements = {
            subtotal: document.querySelector('.cart-summary-line:nth-child(1) .cart-summary-amount'),
            discount: document.querySelector('.cart-summary-discount .cart-summary-amount'),
            total: document.querySelector('.cart-summary-total span:last-child')
        };
        
        if (data.subtotal !== undefined && summaryElements.subtotal) {
            summaryElements.subtotal.textContent = `$${data.subtotal}`;
        }
        if (data.discount !== undefined && summaryElements.discount) {
            summaryElements.discount.textContent = `-$${data.discount}`;
        }
        if (data.total !== undefined && summaryElements.total) {
            summaryElements.total.textContent = `$${data.total}`;
        }
    }
    
    showSuccess(message) {
        this.showNotification(message, 'success');
    }
    
    showError(message) {
        this.showNotification(message, 'error');
    }
    
    showNotification(message, type) {
        // –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–æ—Å—Ç-–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        const toast = document.createElement('div');
        toast.className = `message message-${type}`;
        toast.innerHTML = `
            ${message}
            <button class="message-close">&times;</button>
        `;
        
        const container = document.querySelector('.messages') || this.createMessagesContainer();
        container.appendChild(toast);
        
        // –ê–≤—Ç–æ–≤–∏–¥–∞–ª–µ–Ω–Ω—è
        setTimeout(() => toast.remove(), 5000);
        
        // –í–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ –∫–ª—ñ–∫—É
        toast.querySelector('.message-close').addEventListener('click', () => toast.remove());
    }
    
    createMessagesContainer() {
        const container = document.createElement('div');
        container.className = 'messages';
        document.body.appendChild(container);
        return container;
    }
    
    getCSRFToken() {
        return document.querySelector('[name=csrfmiddlewaretoken]')?.value || '';
    }
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
document.addEventListener('DOMContentLoaded', () => {
    new Cart();
});
```

---

## üéØ –ï–¢–ê–ü 6: API ENDPOINTS

### 6.1 –î–æ–¥–∞—Ç–∫–æ–≤—ñ API –º–µ—Ç–æ–¥–∏
```python
# apps/cart/api_views.py - –î–û–î–ê–¢–ò –Ω–æ–≤—ñ endpoints:

class CartUpdateQuantityAPIView(CartMixin, APIView):
    """–û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ç–æ–≤–∞—Ä—É"""
    
    def post(self, request):
        cart = self.get_cart()
        item_id = request.data.get('item_id')
        quantity_change = int(request.data.get('quantity_change', 0))
        
        try:
            item = cart.items.get(id=item_id)
            new_quantity = item.quantity + quantity_change
            
            if new_quantity <= 0:
                item.delete()
                message = f"{item.item_name} –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –∫–æ—à–∏–∫–∞"
            else:
                item.quantity = new_quantity
                item.save()
                message = f"–ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ–Ω–æ–≤–ª–µ–Ω–æ"
            
            return Response({
                'success': True,
                'message': message,
                'cart_total': float(cart.get_total_with_discount()),
                'subtotal': float(cart.get_subtotal()),
                'discount': float(cart.discount_amount)
            })
            
        except CartItem.DoesNotExist:
            return Response({
                'success': False,
                'message': '–¢–æ–≤–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'
            }, status=404)

class CartApplyCouponAPIView(CartMixin, APIView):
    """–ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –ø—Ä–æ–º–æ–∫–æ–¥—É"""
    
    def post(self, request):
        cart = self.get_cart()
        code = request.data.get('code', '').strip()
        
        if not code:
            return Response({
                'success': False,
                'message': '–í–≤–µ–¥—ñ—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥'
            })
        
        cart_service = CartService(request)
        success, message = cart_service.apply_coupon(code)
        
        return Response({
            'success': success,
            'message': message,
            'cart_total': float(cart.get_total_with_discount()),
            'subtotal': float(cart.get_subtotal()),
            'discount': float(cart.discount_amount)
        })
```

### 6.2 –û–Ω–æ–≤–ª–µ–Ω–Ω—è URL
```python
# apps/cart/api_urls.py - –î–û–î–ê–¢–ò:

urlpatterns = [
    # ... —ñ—Å–Ω—É—é—á—ñ ...
    path('update/', CartUpdateQuantityAPIView.as_view(), name='cart_update'),
    path('apply-coupon/', CartApplyCouponAPIView.as_view(), name='apply_coupon'),
]
```

---

## üéØ –ï–¢–ê–ü 7: –î–û–†–û–ë–ö–ê –ú–û–î–ï–õ–ï–ô –ö–û–ù–¢–ï–ù–¢–£

### 7.1 –ú–µ—Ç–æ–¥–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤ –∫–æ—à–∏–∫—É
```python
# apps/content/models.py - –î–û–î–ê–¢–ò –º–µ—Ç–æ–¥–∏:

class Course(models.Model):
    # ... —ñ—Å–Ω—É—é—á—ñ –ø–æ–ª—è ...
    
    def get_content_type_display(self):
        """–û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç—É –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤ –∫–æ—à–∏–∫—É"""
        materials = self.materials.all()
        
        video_materials = materials.filter(content_type='video')
        if video_materials.exists():
            total_duration = sum(m.video_duration_seconds for m in video_materials if m.video_duration_seconds)
            minutes = total_duration // 60
            return f"VIDEO ‚Ä¢ {minutes} –•–í"
        
        if materials.filter(content_type='pdf').exists():
            return "PDF"
        
        if materials.filter(content_type='article').exists():
            return "–°–¢–ê–¢–¢–Ø"
        
        return "–ö–£–†–°"
    
    def get_cart_badges(self):
        """–û—Ç—Ä–∏–º–∞—Ç–∏ badges –¥–ª—è –∫–æ—à–∏–∫–∞"""
        badges = []
        if self.is_featured:
            badges.append('—Ç–æ–ø-–ø—Ä–æ–¥–∞–∂—ñ–≤')
        if self.created_at > timezone.now() - timedelta(days=30):
            badges.append('–Ω–æ–≤–∏–Ω–∫–∞')
        return badges
    
    def get_cart_tags(self):
        """–û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–µ–≥–∏ –¥–ª—è –∫–æ—à–∏–∫–∞"""
        return list(self.tags.values_list('name', flat=True))
```

---

## üéØ –ï–¢–ê–ü 8: –¢–ï–°–¢–£–í–ê–ù–ù–Ø –¢–ê –û–ü–¢–ò–ú–Ü–ó–ê–¶–Ü–Ø

### 8.1 –ú–æ–±—ñ–ª—å–Ω–µ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
- ‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∞–¥–∞–ø—Ç–∞—Ü—ñ—é –Ω–∞ —Ä—ñ–∑–Ω–∏—Ö —Ä–æ–∑–º—ñ—Ä–∞—Ö –µ–∫—Ä–∞–Ω—É
- ‚úÖ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –Ω–∞ iOS Safari (–æ—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ touch events)
- ‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å (accessibility)

### 8.2 –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å
- ‚úÖ –ú—ñ–Ω—ñ–º—ñ–∑—É–≤–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å AJAX –∑–∞–ø–∏—Ç—ñ–≤
- ‚úÖ –û–ø—Ç–∏–º—ñ–∑—É–≤–∞—Ç–∏ CSS (–±–µ–∑ !important)
- ‚úÖ Lazy loading –∑–æ–±—Ä–∞–∂–µ–Ω—å

### 8.3 UX —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
- ‚úÖ –®–≤–∏–¥–∫—ñ—Å—Ç—å –≤—ñ–¥–≥—É–∫—É –Ω–∞ –¥—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
- ‚úÖ –ó—Ä–æ–∑—É–º—ñ–ª—ñ—Å—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –ø—Ä–æ –ø–æ–º–∏–ª–∫–∏
- ‚úÖ –ü–ª–∞–≤–Ω—ñ—Å—Ç—å –∞–Ω—ñ–º–∞—Ü—ñ–π

---

## üéØ –ï–¢–ê–ü 9: –§–Ü–ù–ê–õ–¨–ù–ê –Ü–ù–¢–ï–ì–†–ê–¶–Ü–Ø

### 9.1 –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –¥–æ–¥–∞—Ç–∫—É
```python
# playvision/urls.py - –ø–µ—Ä–µ–∫–æ–Ω–∞—Ç–∏—Å—å —â–æ —î:
path('cart/', include('apps.cart.urls')),
path('api/v1/cart/', include('apps.cart.api_urls')),
```

### 9.2 –û–Ω–æ–≤–ª–µ–Ω–Ω—è base template
```html
<!-- templates/base/base.html - –≤ —Ö–µ–¥–µ—Ä—ñ -->
<a href="{% url 'cart:cart' %}" class="navbar-icon cart-icon">
    <!-- SVG —ñ–∫–æ–Ω–∫–∞ –∫–æ—à–∏–∫–∞ -->
    <span class="cart-count" data-cart-count>{{ cart.get_items_count|default:0 }}</span>
</a>
```

---

## ‚úÖ –ß–ï–ö–õ–ò–°–¢ –ì–û–¢–û–í–ù–û–°–¢–Ü

### Backend:
- [ ] –ú—ñ–≥—Ä–∞—Ü—ñ—ó –º–æ–¥–µ–ª–µ–π –≤–∏–∫–æ–Ω–∞–Ω—ñ
- [ ] CartService –∑ –Ω–æ–≤–∏–º–∏ –º–µ—Ç–æ–¥–∞–º–∏
- [ ] API endpoints –¥–æ–¥–∞–Ω—ñ
- [ ] –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API

### Frontend:
- [ ] CSS –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ —Å—Ç–≤–æ—Ä–µ–Ω—ñ
- [ ] HTML —à–∞–±–ª–æ–Ω –≥–æ—Ç–æ–≤–∏–π
- [ ] JavaScript —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª
- [ ] –ú–æ–±—ñ–ª—å–Ω–∞ –∞–¥–∞–ø—Ç–∞—Ü—ñ—è

### –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è:
- [ ] URL –º–∞—Ä—à—Ä—É—Ç–∏ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω—ñ
- [ ] –ö–æ—à–∏–∫ —ñ–Ω—Ç–µ–≥—Ä–æ–≤–∞–Ω–∏–π –≤ header
- [ ] –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–æ–≤–Ω–æ–≥–æ —Ñ–ª–æ—É
- [ ] Cross-browser —Å—É–º—ñ—Å–Ω—ñ—Å—Ç—å

---

## üöÄ –ü–õ–ê–ù –ó–ê–ü–£–°–ö–£

1. **–¢–∏–∂–¥–µ–Ω—å 1**: –ï—Ç–∞–ø–∏ 1-3 (–º–æ–¥–µ–ª—ñ, —Å–µ—Ä–≤—ñ—Å–∏, CSS)
2. **–¢–∏–∂–¥–µ–Ω—å 2**: –ï—Ç–∞–ø–∏ 4-6 (—à–∞–±–ª–æ–Ω–∏, JS, API)
3. **–¢–∏–∂–¥–µ–Ω—å 3**: –ï—Ç–∞–ø–∏ 7-8 (–¥–æ—Ä–æ–±–∫–∞, —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è)
4. **–¢–∏–∂–¥–µ–Ω—å 4**: –ï—Ç–∞–ø 9 (—ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è, –∑–∞–ø—É—Å–∫)

**–†–µ–∑—É–ª—å—Ç–∞—Ç**: –ü–æ–≤–Ω—ñ—Å—Ç—é —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–∏–π –∫–æ—à–∏–∫ –∑–≥—ñ–¥–Ω–æ –¥–∏–∑–∞–π–Ω—É –∑—ñ —Å–∫—Ä—ñ–Ω—à–æ—Ç—ñ–≤, –±–µ–∑ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç—ñ–≤ –∑ —ñ—Å–Ω—É—é—á–∏–º –∫–æ–¥–æ–º.