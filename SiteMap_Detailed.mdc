---
alwaysApply: true
---
## 2. АВТЕНТИФІКАЦІЯ (доступ: неавторизовані)

### 2.1 Реєстрація
- **URL**: `/auth/register/`
- **View**: `CustomRegisterView` (CreateView)
- **Template**: `auth/register.html`
- **Логіка**:
  - Форма `CustomUserCreationForm` (email/phone, password, agreements)
  - Інтеграція OAuth: Google, Telegram, TikTok
  - Email/SMS верифікація через `VerificationCode` модель
  - Автоматичне створення `UserProfile` після реєстрації

### 2.2 Вхід
- **URL**: `/auth/login/`
- **View**: `CustomLoginView` (FormView)
- **Template**: `auth/login.html`
- **Логіка**:
  - Підтримка email/phone + password
  - OAuth редірект handlers
  - Remember me функціонал
  - Rate limiting через `django-ratelimit`

### 2.3 Відновлення паролю
- **URL**: `/auth/password-reset/`
- **View**: `PasswordResetView` (FormView)
- **Template**: `auth/password_reset.html`
- **Логіка**:
  - Генерація коду через `PasswordResetCode` модель
  - Відправка SMS/Email через Celery
  - Експірація кодів через 15 хвилин

---

## 3. ХАБ ЗНАНЬ (доступ: всі, контент обмежений)

### 3.1 Каталог курсів
- **URL**: `/hub/`
- **View**: `CourseListView` (ListView)
- **Template**: `hub/course_list.html`
- **Логіка**:
  - Пагінація через `django.core.paginator`
  - Фільтри: категорія, складність, тривалість, ціна
  - Пошук через PostgreSQL full-text search
  - Badges: featured, new, bestseller через `Course.badges`
  - Персоналізація "Для вас" через `UserPreference`

### 3.2 Детальна сторінка курсу
- **URL**: `/hub/course/<slug>/`
- **View**: `CourseDetailView` (DetailView)  
- **Template**: `hub/course_detail.html`
- **Логіка**:
  - Перевірка доступу через `user.has_course_access(course)`
  - Preview логіка для відео/PDF (20 сек / 10%)
  - Paywall блок з кнопками CTA
  - Рекомендовані курси через collaborative filtering
  - Додавання в улюблені через AJAX

### 3.3 Пошук
- **URL**: `/hub/search/?q=<query>`
- **View**: `CourseSearchView` (ListView)
- **Template**: `hub/search_results.html`
- **Логіка**:
  - PostgreSQL векторний пошук по назві, опису, тегах
  - Автокомпліт через API endpoint
  - Історія пошуків в `SearchHistory` модель

---

## 4. ІВЕНТИ (доступ: всі, реєстрація обмежена)

### 4.1 Список івентів
- **URL**: `/events/`
- **View**: `EventListView` (ListView)
- **Template**: `events/event_list.html`
- **Логіка**:
  - Фільтр по типу події через `Event.event_type`
  - Календарний view через `calendar` library
  - Показ доступних місць через `Event.available_seats`

### 4.2 Детальна сторінка івенту
- **URL**: `/events/<slug>/`
- **View**: `EventDetailView` (DetailView)
- **Template**: `events/event_detail.html`
- **Логіка**:
  - Інформація про спікерів через `EventSpeaker` модель
  - Реєстрація через форму `EventRegistrationForm`
  - Перевірка балансу квитків для Pro-Vision підписників
  - Галерея попередніх івентів через `EventGallery`

### 4.3 Реєстрація на івент
- **URL**: `/events/<slug>/register/`
- **View**: `EventRegistrationView` (FormView)
- **Template**: `events/registration.html`
- **Логіка**:
  - Створення `EventTicket` запису
  - Списання з балансу квитків або редірект на оплату
  - Відправка підтвердження через email/SMS
  - Генерація QR-коду для check-in

---

## 5. МЕНТОР-КОУЧІНГ (доступ: всі, контент частково обмежений)

### 5.1 Огляд програми
- **URL**: `/mentor-coaching/`
- **View**: `MentorCoachingView` (TemplateView)
- **Template**: `mentor/overview.html`
- **Логіка**:
  - 6 блоків напрямків з `MentorCoachingArea` модель
  - Список менторів з `Mentor` модель
  - Форма запису на консультацію

### 5.2 Бронювання сесії
- **URL**: `/mentor-coaching/book/<mentor_id>/`
- **View**: `MentorBookingView` (FormView)
- **Template**: `mentor/booking.html`
- **Логіка**:
  - Календар доступних слотів через `MentorSchedule`
  - Форма бронювання з вибором теми
  - Створення `MentorSession` запису
  - Інтеграція з Zoom API для створення кімнати

---

## 6. ОСОБИСТИЙ КАБІНЕТ (доступ: авторизовані)

### 6.1 Дашборд
- **URL**: `/account/`
- **View**: `AccountDashboardView` (TemplateView)
- **Template**: `account/dashboard.html`
- **Логіка**:
  - Огляд активної підписки
  - Останні куплені курси
  - Upcoming івенти
  - Прогрес навчання

### 6.2 Профіль
- **URL**: `/account/profile/`
- **View**: `ProfileUpdateView` (UpdateView)
- **Template**: `account/profile.html`
- **Логіка**:
  - Редагування `UserProfile` моделі
  - Завантаження аватара через `django-imagekit`
  - Валідація phone/email через верифікацію
  - Push-нотифікація через 5 хв після реєстрації

### 6.3 Підписка
- **URL**: `/account/subscription/`
- **View**: `SubscriptionView` (TemplateView)
- **Template**: `account/subscription.html`
- **Логіка**:
  - Поточна підписка з `UserSubscription` моделі
  - Історія підписок
  - Кнопка скасування через Stripe API
  - Зміна плану з pro-rata розрахунком

### 6.4 Мої файли
- **URL**: `/account/files/`
- **View**: `UserFilesView` (ListView)
- **Template**: `account/files.html`
- **Логіка**:
  - Доступні курси через `user.get_available_courses()`
  - Прогрес перегляду з `CourseProgress` моделі
  - Фільтри: улюблені, завершені, в процесі
  - Кнопка скачування для offline (якщо дозволено)

### 6.5 Історія платежів
- **URL**: `/account/payments/`
- **View**: `PaymentHistoryView` (ListView)
- **Template**: `account/payments.html`
- **Логіка**:
  - Всі транзакції з `Payment` моделі
  - Статуси: pending, completed, failed, refunded
  - Можливість повторної оплати для підписок
  - Завантаження чеків в PDF

### 6.6 Програма лояльності
- **URL**: `/account/loyalty/`
- **View**: `LoyaltyProgramView` (TemplateView)
- **Template**: `account/loyalty.html`
- **Логіка**:
  - Поточний рівень з `UserLoyalty` моделі
  - Історія нарахувань балів
  - Прогрес до наступного рівня
  - Доступні знижки та бонуси

---

## 7. КОМЕРЦІЙНІ СТОРІНКИ (доступ: всі, функції для авторизованих)

### 7.1 Тарифи підписок
- **URL**: `/pricing/`
- **View**: `PricingView` (TemplateView)
- **Template**: `pricing/plans.html`
- **Логіка**:
  - 4 плани з `SubscriptionPlan` моделі
  - Розрахунок економії у % 
  - Порівняльна таблиця features
  - CTA кнопки з редіректом на чекаут

### 7.2 Кошик
- **URL**: `/cart/`
- **View**: `CartView` (TemplateView)
- **Template**: `cart/cart.html`
- **Логіка**:
  - Session-based кошик для неавторизованих
  - Database-based через `CartItem` для авторизованих
  - Рекомендації через `get_cart_recommendations()`
  - Промокоди з валідацією через `Coupon` модель
  - AJAX додавання/видалення товарів

### 7.3 Чекаут
- **URL**: `/checkout/`
- **View**: `CheckoutView` (FormView)
- **Template**: `checkout/checkout.html`
- **Логіка**:
  - Форма даних клієнта `CheckoutForm`
  - Вибір способу оплати
  - Створення `Order` перед редіректом на платіжку
  - Інтеграція з платіжним провайдером
  - 3D Secure обробка

### 7.4 Результат оплати
- **URL**: `/checkout/success/`, `/checkout/cancel/`
- **View**: `PaymentResultView` (TemplateView)
- **Template**: `checkout/result.html`
- **Логіка**:
  - Обробка webhook від платіжного провайдера
  - Активація доступів через `grant_access()` method
  - Відправка чека на email
  - Редірект в кабінет або на курс

---

## 8. API ENDPOINTS (для AJAX та внутрішніх потреб)

### 8.1 Кошик API
- **URL**: `/api/cart/add/`, `/api/cart/remove/`, `/api/cart/update/`
- **View**: `CartAPIView` (APIView)
- **Логіка**: CRUD операції з кошиком через JSON response

### 8.2 Пошук автокомпліт
- **URL**: `/api/search/autocomplete/?q=<query>`
- **View**: `SearchAutocompleteAPIView` (APIView)
- **Логіка**: Швидкий пошук по назвах курсів для dropdown

### 8.3 Улюблені
- **URL**: `/api/favorites/toggle/`
- **View**: `FavoriteToggleAPIView` (APIView)
- **Логіка**: Додавання/видалення курсу з улюблених

### 8.4 Прогрес курсу
- **URL**: `/api/course/<id>/progress/`
- **View**: `CourseProgressAPIView` (APIView)
- **Логіка**: Оновлення прогресу перегляду відео/читання

---

## 9. WEBHOOKS (зовнішні інтеграції)

### 9.1 Платіжні webhook
- **URL**: `/webhooks/payment/`
- **View**: `PaymentWebhookView` (View)
- **Логіка**: Обробка статусів платежів, активація доступів

### 9.2 Email bounce handling
- **URL**: `/webhooks/email/`
- **View**: `EmailWebhookView` (View)
- **Логіка**: Обробка bounce/complaint від email провайдера

---

## 10. АДМІНІСТРАТИВНІ СТОРІНКИ (доступ: staff/admin)

### 10.1 CMS Dashboard
- **URL**: `/admin/cms/`
- **View**: Django Admin + кастомні views
- **Логіка**: Керування контентом, користувачами, статистикою

### 10.2 Аналітика
- **URL**: `/admin/analytics/`
- **View**: `AnalyticsView` (TemplateView) 
- **Логіка**: Дашборд з метриками продажів, конверсій, активності

---

## 11. СЕРВІСНІ СТОРІНКИ

### 11.1 Помилка 404
- **URL**: будь-який неіснуючий
- **View**: `Custom404View`
- **Template**: `errors/404.html`

### 11.2 Помилка 500
- **View**: `Custom500View`
- **Template**: `errors/500.html`

### 11.3 Maintenance
- **URL**: всі (коли увімкнений режим)
- **View**: `MaintenanceView`
- **Template**: `maintenance.html`

---

## 12. URL СТРУКТУРА ПОВНА

```
/                           # Головна
/about/                     # Про нас
/contacts/                  # Контакти
/legal/<slug>/              # Юридичні сторінки

/auth/register/             # Реєстрація
/auth/login/                # Вхід
/auth/logout/               # Вихід
/auth/password-reset/       # Відновлення паролю
/auth/verify/<code>/        # Верифікація email/phone

/hub/                       # Каталог курсів
/hub/course/<slug>/         # Деталі курсу
/hub/search/                # Пошук курсів

/events/                    # Список івентів  
/events/<slug>/             # Деталі івенту
/events/<slug>/register/    # Реєстрація на івент

/mentor-coaching/           # Огляд програми
/mentor-coaching/book/<id>/ # Бронювання сесії

/pricing/                   # Тарифи підписок
/cart/                      # Кошик
/checkout/                  # Оформлення замовлення
/checkout/success/          # Успішна оплата
/checkout/cancel/           # Скасована оплата

/account/                   # Дашборд кабінету
/account/profile/           # Профіль
/account/subscription/      # Підписка
/account/files/             # Мої файли
/account/payments/          # Історія платежів
/account/loyalty/           # Програма лояльності

/api/cart/                  # API кошика
/api/search/                # API пошуку
/api/favorites/             # API улюблених
/api/course/progress/       # API прогресу

/webhooks/payment/          # Webhook платежів
/webhooks/email/            # Webhook email

/admin/                     # Django Admin
/admin/cms/                 # CMS панель
/admin/analytics/           # Аналітика
```

---

## 13. БЕЗПЕКА ТА МІДЛВЕЙР

### 13.1 Мідлвейр список (settings.py)
```python
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Статичні файли
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',       # CORS для API
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django_ratelimit.middleware.RatelimitMiddleware',  # Rate limiting
    'playvision.middleware.PaywallMiddleware',     # Перевірка доступу до контенту
    'playvision.middleware.MaintenanceMiddleware', # Режим обслуговування
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
```

### 13.2 Кастомні middleware
- **PaywallMiddleware**: Автоматична перевірка доступу до захищеного контенту
- **MaintenanceMiddleware**: Показ сторінки обслуговування
- **AnalyticsMiddleware**: Збір метрик для внутрішньої аналітики

---

Це повна карта сайту з детальною логікою кожної сторінки. Тепер переходжу до створення повного технічного завдання.