---
alwaysApply: true
---
## 1. –ó–ê–ì–ê–õ–¨–ù–ê –ê–†–•–Ü–¢–ï–ö–¢–£–†–ê

### 1.1 –¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—á–Ω–∏–π —Å—Ç–µ–∫
```yaml
Backend:
  - Django: 5.1+
  - Python: 3.11+
  - PostgreSQL: 15+
  - Redis: 7.0+
  - Celery: 5.3+
  - Gunicorn + Nginx

Frontend:
  - Vanilla JS (ES6+)
  - CSS3 + SCSS
  - HTML5
  - Alpine.js (–¥–ª—è —Ä–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ)
  - HTMX (–¥–ª—è AJAX)
  - Service Worker API

–ü–ª–∞—Ç—ñ–∂–Ω—ñ —Å–∏—Å—Ç–µ–º–∏:
  - Stripe API
  - Apple Pay SDK
  - Google Pay API

–ú–µ–¥—ñ–∞ —Ç–∞ CDN:
  - AWS S3 / CloudFront
  - FFmpeg (–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è)
  - HLS streaming
  
–ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥:
  - Sentry
  - Prometheus + Grafana
  - ELK Stack
```

### 1.2 –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ—î–∫—Ç—É
```
playvision/
‚îú‚îÄ‚îÄ apps/
‚îÇ   ‚îú‚îÄ‚îÄ accounts/        # –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ, –ø—Ä–æ—Ñ—ñ–ª—ñ, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è
‚îÇ   ‚îú‚îÄ‚îÄ subscriptions/   # –ü—ñ–¥–ø–∏—Å–∫–∏ —Ç–∞ –ø–ª–∞–Ω–∏
‚îÇ   ‚îú‚îÄ‚îÄ payments/        # –ü–ª–∞—Ç–µ–∂—ñ, —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
‚îÇ   ‚îú‚îÄ‚îÄ content/         # –ö—É—Ä—Å–∏, –º–∞—Ç–µ—Ä—ñ–∞–ª–∏, —Ç–µ–≥–∏
‚îÇ   ‚îú‚îÄ‚îÄ events/          # –Ü–≤–µ–Ω—Ç–∏, –∫–≤–∏—Ç–∫–∏, QR
‚îÇ   ‚îú‚îÄ‚îÄ mentoring/       # –ú–µ–Ω—Ç–æ—Ä-–∫–æ—É—á—ñ–Ω–≥
‚îÇ   ‚îú‚îÄ‚îÄ cart/            # –ö–æ—à–∏–∫, –ø—Ä–æ–º–æ–∫–æ–¥–∏
‚îÇ   ‚îú‚îÄ‚îÄ ai/              # AI-–∞–≥–µ–Ω—Ç, –±–∞–∑–∞ –∑–Ω–∞–Ω—å
‚îÇ   ‚îú‚îÄ‚îÄ cms/             # CMS —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª
‚îÇ   ‚îú‚îÄ‚îÄ analytics/       # –í–Ω—É—Ç—Ä—ñ—à–Ω—è –∞–Ω–∞–ª—ñ—Ç–∏–∫–∞
‚îÇ   ‚îú‚îÄ‚îÄ notifications/   # Push, email, SMS
‚îÇ   ‚îú‚îÄ‚îÄ loyalty/         # –ü—Ä–æ–≥—Ä–∞–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç—ñ
‚îÇ   ‚îî‚îÄ‚îÄ core/            # –°–ø—ñ–ª—å–Ω—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
‚îú‚îÄ‚îÄ static/
‚îú‚îÄ‚îÄ media/
‚îú‚îÄ‚îÄ templates/
‚îú‚îÄ‚îÄ locale/              # i18n —Ñ–∞–π–ª–∏
‚îú‚îÄ‚îÄ docker/
‚îî‚îÄ‚îÄ requirements/
```

### 1.3 –õ–æ–≥—ñ—á–Ω—ñ –º–æ–¥—É–ª—ñ —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–æ—Å—Ç—ñ

| –ú–æ–¥—É–ª—å | –í—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å | –ö–ª—é—á–æ–≤—ñ –º–æ–¥–µ–ª—ñ |
|--------|-----------------|----------------|
| accounts | –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏ | User, Profile, Role |
| subscriptions | –õ–æ–≥—ñ–∫–∞ –ø—ñ–¥–ø–∏—Å–æ–∫ | Plan, Subscription, Entitlement |
| payments | –û–±—Ä–æ–±–∫–∞ –ø–ª–∞—Ç–µ–∂—ñ–≤ | Payment, Order, Transaction |
| content | –ù–∞–≤—á–∞–ª—å–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏ | Course, Material, Tag, Progress |
| events | –Ü–≤–µ–Ω—Ç-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç | Event, Ticket, Speaker |
| cart | –ö–æ—à–∏–∫ —Ç–∞ —á–µ–∫–∞—É—Ç | Cart, CartItem, Coupon |
| ai | –®—Ç—É—á–Ω–∏–π —ñ–Ω—Ç–µ–ª–µ–∫—Ç | AIQuery, KnowledgeBase |
| loyalty | –ü—Ä–æ–≥—Ä–∞–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç—ñ | LoyaltyLevel, Points |

---

## 2. –î–û–ú–ï–ù–ù–ê –ú–û–î–ï–õ–¨

### 2.1 ER-—Å—Ö–µ–º–∞ –æ—Å–Ω–æ–≤–Ω–∏—Ö —Å—É—Ç–Ω–æ—Å—Ç–µ–π

```mermaid
erDiagram
    User ||--o{ Profile : has
    User ||--o{ Subscription : has
    User ||--o{ Payment : makes
    User ||--o{ Progress : tracks
    User ||--o{ Favorite : marks
    User ||--o{ EventTicket : purchases
    
    Subscription }o--|| Plan : based_on
    Subscription ||--o{ Entitlement : grants
    
    Course ||--o{ Material : contains
    Course }o--o{ Tag : tagged_with
    Course ||--o{ Progress : tracked_in
    
    Event ||--o{ EventTicket : sells
    Event ||--o{ Speaker : features
    
    Cart ||--o{ CartItem : contains
    Order ||--o{ OrderItem : includes
    Order ||--|| Payment : paid_by
    
    Coupon ||--o{ Order : applied_to
    LoyaltyLevel ||--o{ User : assigned_to
```

### 2.2 –î–µ—Ç–∞–ª—å–Ω—ñ –º–æ–¥–µ–ª—ñ

#### User —Ç–∞ Profile
```python
class User(AbstractUser):
    email = models.EmailField(unique=True)
    phone = models.CharField(max_length=20, blank=True)
    is_email_verified = models.BooleanField(default=False)
    is_phone_verified = models.BooleanField(default=False)
    stripe_customer_id = models.CharField(max_length=100, blank=True)
    created_at = models.DateTimeField(auto_now_add=True)
    
class Profile(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    first_name = models.CharField(max_length=50)
    last_name = models.CharField(max_length=50)
    birth_date = models.DateField(null=True)
    avatar = models.ImageField(upload_to='avatars/')
    profession = models.CharField(max_length=100)
    interests = models.ManyToManyField('Tag')
    completed_survey = models.BooleanField(default=False)
```

#### Subscription —Ç–∞ Entitlement
```python
class Plan(models.Model):
    DURATION_CHOICES = [
        ('1_month', '1 –º—ñ—Å—è—Ü—å'),
        ('3_months', '3 –º—ñ—Å—è—Ü—ñ'),
        ('12_months', '12 –º—ñ—Å—è—Ü—ñ–≤'),
    ]
    name = models.CharField(max_length=100)
    duration = models.CharField(max_length=20, choices=DURATION_CHOICES)
    price = models.DecimalField(max_digits=10, decimal_places=2)
    features = models.JSONField()  # ["–í—Å—ñ –∫—É—Ä—Å–∏", "–Ü–≤–µ–Ω—Ç–∏", ...]
    event_tickets_balance = models.IntegerField(default=0)
    discount_percentage = models.IntegerField(default=0)
    
class Subscription(models.Model):
    STATUS_CHOICES = [
        ('active', '–ê–∫—Ç–∏–≤–Ω–∞'),
        ('paused', '–ü—Ä–∏–∑—É–ø–∏–Ω–µ–Ω–∞'),
        ('cancelled', '–°–∫–∞—Å–æ–≤–∞–Ω–∞'),
        ('expired', '–ó–∞–∫—ñ–Ω—á–∏–ª–∞—Å—å'),
    ]
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    plan = models.ForeignKey(Plan, on_delete=models.CASCADE)
    status = models.CharField(max_length=20, choices=STATUS_CHOICES)
    start_date = models.DateTimeField()
    end_date = models.DateTimeField()
    auto_renew = models.BooleanField(default=True)
    stripe_subscription_id = models.CharField(max_length=100)
    
class Entitlement(models.Model):
    subscription = models.ForeignKey(Subscription, on_delete=models.CASCADE)
    content_type = models.CharField(max_length=50)  # 'course', 'event', etc
    content_id = models.IntegerField()
    granted_at = models.DateTimeField(auto_now_add=True)
```

### 2.3 –ú–∞—Ç—Ä–∏—Ü—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É

| –†–æ–ª—å | –ü—É–±–ª—ñ—á–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ | –•–∞–± –∑–Ω–∞–Ω—å | –Ü–≤–µ–Ω—Ç–∏ | –ú–µ–Ω—Ç–æ—Ä-–∫–æ—É—á—ñ–Ω–≥ | –ö–∞–±—ñ–Ω–µ—Ç | CMS |
|------|------------------|-----------|---------|----------------|---------|-----|
| –ì—ñ—Å—Ç—å | ‚úÖ –ü–æ–≤–Ω–∏–π | üëÅÔ∏è Preview | üëÅÔ∏è –ü–µ—Ä–µ–≥–ª—è–¥ | üëÅÔ∏è –ü–µ—Ä–µ–≥–ª—è–¥ | ‚ùå | ‚ùå |
| –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á | ‚úÖ –ü–æ–≤–Ω–∏–π | üëÅÔ∏è Preview | üõí –ö—É–ø—ñ–≤–ª—è | üõí –ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è | ‚úÖ –ë–∞–∑–æ–≤–∏–π | ‚ùå |
| L1 –ø—ñ–¥–ø–∏—Å–Ω–∏–∫ | ‚úÖ –ü–æ–≤–Ω–∏–π | ‚úÖ –ë–∞–∑–æ–≤—ñ –∫—É—Ä—Å–∏ | üõí –ö—É–ø—ñ–≤–ª—è | üí∞ –ó–Ω–∏–∂–∫–∞ 5% | ‚úÖ –ü–æ–≤–Ω–∏–π | ‚ùå |
| L2 –ø—ñ–¥–ø–∏—Å–Ω–∏–∫ | ‚úÖ –ü–æ–≤–Ω–∏–π | ‚úÖ –í—Å—ñ –∫—É—Ä—Å–∏ | üé´ 1 –∫–≤–∏—Ç–æ–∫/–º—ñ—Å | üí∞ –ó–Ω–∏–∂–∫–∞ 10% | ‚úÖ –ü–æ–≤–Ω–∏–π | ‚ùå |
| L3 –ø—ñ–¥–ø–∏—Å–Ω–∏–∫ | ‚úÖ –ü–æ–≤–Ω–∏–π | ‚úÖ –í—Å—ñ + VIP | üé´ 3 –∫–≤–∏—Ç–∫–∏/–º—ñ—Å | üí∞ –ó–Ω–∏–∂–∫–∞ 15% | ‚úÖ –ü–æ–≤–Ω–∏–π | ‚ùå |
| –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä | ‚úÖ –ü–æ–≤–Ω–∏–π | ‚úÖ –ü–æ–≤–Ω–∏–π | ‚úÖ –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è | ‚úÖ –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è | ‚úÖ –í—Å—ñ | ‚úÖ –ü–æ–≤–Ω–∏–π |

---

## 3. –†–û–£–¢–ò–ù–ì –¢–ê –°–¢–û–†–Ü–ù–ö–ò

### 3.1 –ü–æ–≤–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ URL
```python
# urls.py
urlpatterns = [
    # –ü—É–±–ª—ñ—á–Ω—ñ
    path('', HomeView.as_view(), name='home'),
    path('about/', AboutView.as_view(), name='about'),
    path('contacts/', ContactView.as_view(), name='contacts'),
    path('legal/<slug:slug>/', LegalPageView.as_view(), name='legal'),
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è
    path('auth/', include('apps.accounts.urls')),
    
    # –•–∞–± –∑–Ω–∞–Ω—å
    path('hub/', include('apps.content.urls')),
    
    # –Ü–≤–µ–Ω—Ç–∏
    path('events/', include('apps.events.urls')),
    
    # –ú–µ–Ω—Ç–æ—Ä-–∫–æ—É—á—ñ–Ω–≥
    path('mentor-coaching/', include('apps.mentoring.urls')),
    
    # –ö–æ–º–µ—Ä—Ü—ñ–π–Ω—ñ
    path('pricing/', PricingView.as_view(), name='pricing'),
    path('cart/', include('apps.cart.urls')),
    path('checkout/', include('apps.payments.urls')),
    
    # –û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç
    path('account/', include('apps.accounts.cabinet_urls')),
    
    # API
    path('api/v1/', include('apps.core.api_urls')),
    
    # Webhooks
    path('webhooks/', include('apps.payments.webhook_urls')),
    
    # Admin
    path('admin/', admin.site.urls),
    path('cms/', include('apps.cms.urls')),
]
```

### 3.2 –ö–ª—é—á–æ–≤—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–æ–∫

#### –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞
```yaml
Hero –∫–∞—Ä—É—Å–µ–ª—å:
  - 4 —Å–ª–∞–π–¥–∏ –∑ –∞–≤—Ç–æ–∑–º—ñ–Ω–æ—é (5-7 —Å–µ–∫)
  - –ü–æ–≤–Ω–æ–µ–∫—Ä–∞–Ω–Ω—ñ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è + —Ç–µ–∫—Å—Ç overlay
  - –ö–Ω–æ–ø–∫–∏ CTA –Ω–∞ –∫–æ–∂–Ω–æ–º—É —Å–ª–∞–π–¥—ñ

–°–µ–∫—Ü—ñ—è –∫—É—Ä—Å—ñ–≤:
  - 6 featured –∫—É—Ä—Å—ñ–≤
  - –ö–∞—Ä—Ç–∫–∏ –∑ —Ü—ñ–Ω–æ—é, —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—é, badges
  - –ö–Ω–æ–ø–∫–∞ "–û–≥–ª—è–¥ –∫—É—Ä—Å—É"

–ö–∞–ª–µ–Ω–¥–∞—Ä —ñ–≤–µ–Ω—Ç—ñ–≤:
  - –ú—ñ—Å—è—á–Ω–∏–π view –∑ –∫–æ–ª—å–æ—Ä–æ–≤–∏–º–∏ –º—ñ—Ç–∫–∞–º–∏
  - –§—ñ–ª—å—Ç—Ä–∏ –ø–æ —Ç–∏–ø—É –ø–æ–¥—ñ–π
  - –ö–ª—ñ–∫ ‚Üí –¥–µ—Ç–∞–ª—ñ —ñ–≤–µ–Ω—Ç—É

–ú–µ–Ω—Ç–æ—Ä-–∫–æ—É—á—ñ–Ω–≥:
  - 6 –±–ª–æ–∫—ñ–≤ –Ω–∞–ø—Ä—è–º–∫—ñ–≤ (—ñ–≥—Ä–æ–≤–∏–π —ñ–Ω—Ç–µ–ª–µ–∫—Ç, —Ñ—ñ–∑–∏–∫–∞, —Ç–µ—Ö–Ω—ñ–∫–∞...)
  - –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞ —Å—Ö–µ–º–∞ –∑ –∞–Ω—ñ–º–∞—Ü—ñ—î—é
  
CTA –±–ª–æ–∫:
  - "–°—Ç–∞–Ω—å —á–∞—Å—Ç–∏–Ω–æ—é –∫–æ–º'—é–Ω—ñ—Ç—ñ Play Vision"
  - –ö–Ω–æ–ø–∫–∞ ‚Üí —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è/–∞–Ω–∫–µ—Ç–∞
```

#### –•–∞–± –∑–Ω–∞–Ω—å
```yaml
–ü–æ—Å—Ç—ñ–π–Ω–∏–π –±–∞–Ω–µ—Ä:
  - –¢–µ–∫—Å—Ç –ø—Ä–æ –ø—ñ–¥–ø–∏—Å–∫—É (sticky)
  - –ö–ª—ñ–∫ ‚Üí /pricing/

–¶–∏—Ç–∞—Ç–∏ –µ–∫—Å–ø–µ—Ä—Ç—ñ–≤:
  - –ö–∞—Ä—É—Å–µ–ª—å (10-20 —Å–µ–∫)
  - –ü–æ—Ä—Ç—Ä–µ—Ç–∏ + —Ü–∏—Ç–∞—Ç–∏

–ö–∞—Ç–∞–ª–æ–≥ –∫—É—Ä—Å—ñ–≤:
  - –§—ñ–ª—å—Ç—Ä–∏: –∫–∞—Ç–µ–≥–æ—Ä—ñ—è, —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å, —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å
  - –ü–æ—à—É–∫ –∑ –∞–≤—Ç–æ–∫–æ–º–ø–ª—ñ—Ç
  - –ü–∞–≥—ñ–Ω–∞—Ü—ñ—è –ø–æ 12 –∫—É—Ä—Å—ñ–≤
  - Badges: —Ç–æ–ø, –Ω–æ–≤–∏–Ω–∫–∞, –¥–ª—è –≤–∞—Å

–ö–∞—Ä—Ç–∫–∞ –∫—É—Ä—Å—É:
  - Preview on hover
  - –¶—ñ–Ω–∞/–ø—ñ–¥–ø–∏—Å–∫–∞
  - –£–ª—é–±–ª–µ–Ω—ñ (‚ù§Ô∏è)
  - –ü—Ä–æ–≥—Ä–µ—Å (–¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤)
```

---

## 4. –ö–û–ù–¢–ï–ù–¢-–ì–ï–ô–¢–ò–ù–ì

### 4.1 –ü–æ–ª—ñ—Ç–∏–∫–∞ –¥–æ—Å—Ç—É–ø—É
```python
class ContentAccessMiddleware:
    """–Ñ–¥–∏–Ω–∞ –ø–æ–ª—ñ—Ç–∏–∫–∞: –ø–ª–∞—Ç–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–æ –æ–ø–ª–∞—Ç–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π"""
    
    def process_view(self, request, view_func, view_args, view_kwargs):
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø—É –¥–ª—è content views
        if hasattr(view_func, 'view_class'):
            view_class = view_func.view_class
            if issubclass(view_class, ContentDetailView):
                content = self.get_content(view_kwargs)
                has_access = self.check_access(request.user, content)
                request.content_access = has_access
```

### 4.2 –°—Ç–∞–Ω–∏ –±–ª–æ–∫—É –∫–æ–Ω—Ç–µ–Ω—Ç—É
```javascript
// content-block.js
class ContentBlock {
    constructor(element) {
        this.state = element.dataset.state; // 'locked', 'preview', 'unlocked'
        this.contentType = element.dataset.type; // 'video', 'pdf', 'article'
    }
    
    render() {
        switch(this.state) {
            case 'locked':
                this.showPaywall();
                break;
            case 'preview':
                this.startPreview();
                break;
            case 'unlocked':
                this.showFullContent();
                break;
        }
    }
    
    showPaywall() {
        // Blur effect + lock icon
        this.element.classList.add('content-locked');
        this.addCTAButtons();
    }
    
    startPreview() {
        if (this.contentType === 'video') {
            this.playVideo(20); // 20 seconds
        } else {
            this.showPartialContent(0.1); // 10%
        }
    }
}
```

### 4.3 CTA –ª–æ–≥—ñ–∫–∞
```html
<!-- paywall-cta.html -->
<div class="paywall-cta">
    {% if not user.is_authenticated %}
        <a href="{% url 'auth:register' %}" class="btn btn-primary">
            –í—Å—Ç—É–ø–∏—Ç–∏ –≤ –∫–ª—É–±
        </a>
    {% elif not user.has_active_subscription %}
        <a href="{% url 'pricing' %}" class="btn btn-primary">
            –û—Ñ–æ—Ä–º–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É
        </a>
        <a href="{% url 'cart:add' %}?course={{ course.id }}" class="btn btn-secondary">
            –ö—É–ø–∏—Ç–∏ –æ–∫—Ä–µ–º–æ –∑–∞ {{ course.price }}‚Ç¥
        </a>
    {% else %}
        <a href="{% url 'auth:login' %}" class="btn btn-primary">
            –£–≤—ñ–π—Ç–∏
        </a>
    {% endif %}
</div>
```

### 4.4 –°–µ—Ä–≤–µ—Ä–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞
```python
# views.py
class CourseDetailView(DetailView):
    model = Course
    
    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        user = self.request.user
        course = self.object
        
        # –°–µ—Ä–≤–µ—Ä–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–∞–≤
        if user.is_authenticated:
            has_access = check_entitlements(user, course)
            context['has_access'] = has_access
            context['access_type'] = get_access_type(user, course)
        else:
            context['has_access'] = False
            context['access_type'] = 'guest'
            
        # Preview –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
        if course.is_free or context['has_access']:
            context['content_state'] = 'unlocked'
        elif course.has_preview:
            context['content_state'] = 'preview'
        else:
            context['content_state'] = 'locked'
            
        return context
```

---

## 5. –ó–ê–•–ò–°–¢ –ú–ï–î–Ü–ê

### 5.1 –í—ñ–¥–µ–æ –∑–∞—Ö–∏—Å—Ç (HLS + AES-128)
```python
# video_protection.py
class VideoProtectionService:
    def generate_hls_playlist(self, video_file, user):
        """–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–∞—Ö–∏—â–µ–Ω–æ–≥–æ HLS –ø–ª–µ–π–ª–∏—Å—Ç–∞"""
        # 1. –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—è –≤ HLS
        output_dir = f"media/hls/{video_file.id}/"
        self.convert_to_hls(video_file.path, output_dir)
        
        # 2. –®–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è —Å–µ–≥–º–µ–Ω—Ç—ñ–≤
        key = self.generate_aes_key()
        self.encrypt_segments(output_dir, key)
        
        # 3. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–∞–Ω–æ–≥–æ URL
        signed_url = self.create_signed_url(
            playlist_path=f"{output_dir}/playlist.m3u8",
            user_id=user.id,
            expires_in=3600  # 1 –≥–æ–¥–∏–Ω–∞
        )
        
        return signed_url
    
    def add_watermark(self, video_stream, user):
        """–î–∏–Ω–∞–º—ñ—á–Ω–∏–π –≤–æ–¥—è–Ω–∏–π –∑–Ω–∞–∫"""
        watermark_text = f"{user.email} | ID: {user.id} | {timezone.now()}"
        # FFmpeg overlay –∫–æ–º–∞–Ω–¥–∞
        return self.apply_text_overlay(video_stream, watermark_text)
```

### 5.2 PDF/–¥–æ–∫—É–º–µ–Ω—Ç–∏ –∑–∞—Ö–∏—Å—Ç
```python
# document_protection.py
class DocumentProtectionService:
    def generate_protected_pdf(self, pdf_file, user):
        """–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è PDF –∑ –≤–æ–¥—è–Ω–∏–º –∑–Ω–∞–∫–æ–º"""
        # 1. –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –æ—Ä–∏–≥—ñ–Ω–∞–ª—É
        pdf = PyPDF2.PdfReader(pdf_file)
        output = PyPDF2.PdfWriter()
        
        # 2. –î–æ–¥–∞–≤–∞–Ω–Ω—è –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫—É –Ω–∞ –∫–æ–∂–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
        for page in pdf.pages:
            watermark = self.create_watermark(
                text=f"{user.email} | {user.profile.full_name}",
                opacity=0.3
            )
            page.merge_page(watermark)
            output.add_page(page)
        
        # 3. –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ —Ç–∏–º—á–∞—Å–æ–≤–∏–π —Ñ–∞–π–ª
        temp_file = self.save_temp_pdf(output)
        
        return temp_file
```

### 5.3 Service Worker –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
```javascript
// sw.js
self.addEventListener('fetch', event => {
    const url = new URL(event.request.url);
    
    // –ù—ñ–∫–æ–ª–∏ –Ω–µ –∫–µ—à—É–≤–∞—Ç–∏ –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
    const privatePatterns = [
        /\/media\/protected\//,
        /\/api\/content\//,
        /\/hls\//,
        /\.m3u8$/,
        /\.ts$/
    ];
    
    if (privatePatterns.some(pattern => pattern.test(url.pathname))) {
        event.respondWith(
            fetch(event.request, {
                cache: 'no-store',
                credentials: 'include'
            })
        );
        return;
    }
    
    // –ó–≤–∏—á–∞–π–Ω–∞ –ª–æ–≥—ñ–∫–∞ –∫–µ—à—É–≤–∞–Ω–Ω—è –¥–ª—è –ø—É–±–ª—ñ—á–Ω–∏—Ö —Ä–µ—Å—É—Ä—Å—ñ–≤
    // ...
});
```

---

## 6. –ü–õ–ê–¢–Ü–ñ–ù–ê –°–ò–°–¢–ï–ú–ê

### 6.1 –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º–∏
```python
# payment_providers.py
class StripePaymentProvider:
    def create_payment_intent(self, order, payment_method):
        """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É –∑ 3DS"""
        intent = stripe.PaymentIntent.create(
            amount=int(order.total * 100),
            currency='uah',
            payment_method=payment_method,
            customer=order.user.stripe_customer_id,
            metadata={
                'order_id': order.id,
                'user_id': order.user.id
            },
            # –û–±–æ–≤'—è–∑–∫–æ–≤–∞ 3DS –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è
            payment_method_options={
                'card': {
                    'request_three_d_secure': 'required'
                }
            }
        )
        return intent
    
    def handle_3ds_challenge(self, payment_intent_id):
        """–û–±—Ä–æ–±–∫–∞ 3DS challenge flow"""
        intent = stripe.PaymentIntent.retrieve(payment_intent_id)
        
        if intent.status == 'requires_action':
            return {
                'requires_action': True,
                'client_secret': intent.client_secret
            }
        
        return {'requires_action': False}
```

### 6.2 –î–µ—Ä–∂–∞–≤–Ω–∞ –º–∞—à–∏–Ω–∞ —Å—Ç–∞–Ω—ñ–≤
```python
# payment_states.py
class PaymentStateMachine:
    """FSM –¥–ª—è Order/Payment/Subscription"""
    
    TRANSITIONS = {
        'order': {
            'draft': ['pending'],
            'pending': ['processing', 'cancelled'],
            'processing': ['completed', 'failed'],
            'completed': [],
            'failed': ['pending'],
            'cancelled': []
        },
        'payment': {
            'created': ['processing'],
            'processing': ['requires_action', 'succeeded', 'failed'],
            'requires_action': ['succeeded', 'failed'],
            'succeeded': ['refunded'],
            'failed': [],
            'refunded': []
        },
        'subscription': {
            'trialing': ['active', 'cancelled'],
            'active': ['past_due', 'cancelled', 'paused'],
            'past_due': ['active', 'cancelled'],
            'paused': ['active', 'cancelled'],
            'cancelled': ['expired'],
            'expired': []
        }
    }
    
    def transition(self, obj, to_state):
        """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–µ—Ä–µ—Ö–æ–¥—É"""
        current_state = obj.status
        allowed = self.TRANSITIONS[obj._meta.model_name][current_state]
        
        if to_state not in allowed:
            raise InvalidTransition(
                f"Cannot transition from {current_state} to {to_state}"
            )
        
        obj.status = to_state
        obj.save()
        
        # –¢—Ä–∏–≥–µ—Ä –ø–æ–¥—ñ–π
        self.trigger_events(obj, current_state, to_state)
```

### 6.3 Webhooks –æ–±—Ä–æ–±–∫–∞
```python
# webhook_handlers.py
class StripeWebhookHandler:
    def handle_webhook(self, payload, signature):
        """–Ü–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–∞ –æ–±—Ä–æ–±–∫–∞ webhook"""
        # 1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–ø–∏—Å—É
        event = stripe.Webhook.construct_event(
            payload, signature, settings.STRIPE_WEBHOOK_SECRET
        )
        
        # 2. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª—ñ–∫–∞—Ç
        if WebhookEvent.objects.filter(event_id=event['id']).exists():
            return {'status': 'duplicate'}
        
        # 3. –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø–æ–¥—ñ—ó
        webhook_event = WebhookEvent.objects.create(
            event_id=event['id'],
            event_type=event['type'],
            payload=event
        )
        
        # 4. –û–±—Ä–æ–±–∫–∞ –∑–∞ —Ç–∏–ø–æ–º
        handlers = {
            'payment_intent.succeeded': self.handle_payment_success,
            'payment_intent.failed': self.handle_payment_failed,
            'customer.subscription.updated': self.handle_subscription_update,
            'customer.subscription.deleted': self.handle_subscription_cancel,
        }
        
        handler = handlers.get(event['type'])
        if handler:
            handler(event['data']['object'])
        
        return {'status': 'processed'}
```

### 6.4 –ö—É–ø–æ–Ω–∏ —Ç–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∏
```python
# coupon_service.py
class CouponService:
    def validate_coupon(self, code, cart_total, user):
        """–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—è –∫—É–ø–æ–Ω—É"""
        try:
            coupon = Coupon.objects.get(
                code=code.upper(),
                is_active=True
            )
        except Coupon.DoesNotExist:
            return {'valid': False, 'error': '–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'}
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∏
        now = timezone.now()
        if now < coupon.valid_from or now > coupon.valid_until:
            return {'valid': False, 'error': '–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –¥—ñ—î –≤ —Ü–µ–π –ø–µ—Ä—ñ–æ–¥'}
        
        if cart_total < coupon.min_amount:
            return {
                'valid': False, 
                'error': f'–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: {coupon.min_amount} ‚Ç¥'
            }
        
        if coupon.max_uses and coupon.used_count >= coupon.max_uses:
            return {'valid': False, 'error': '–ü—Ä–æ–º–æ–∫–æ–¥ –≤–∏—á–µ—Ä–ø–∞–≤ –ª—ñ–º—ñ—Ç –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—å'}
        
        if coupon.once_per_user and user.is_authenticated:
            if CouponUsage.objects.filter(coupon=coupon, user=user).exists():
                return {'valid': False, 'error': '–í–∏ –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–ª–∏ —Ü–µ–π –ø—Ä–æ–º–æ–∫–æ–¥'}
        
        # –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –∑–Ω–∏–∂–∫–∏
        if coupon.discount_type == 'percentage':
            discount = cart_total * (coupon.discount_value / 100)
        else:
            discount = coupon.discount_value
        
        return {
            'valid': True,
            'discount': discount,
            'coupon': coupon
        }
```

---

## 7. –Ü–í–ï–ù–¢-–ú–ï–ù–ï–î–ñ–ú–ï–ù–¢

### 7.1 –°–∏—Å—Ç–µ–º–∞ –∫–≤–∏—Ç–∫—ñ–≤
```python
# event_tickets.py
class EventTicketService:
    def create_ticket(self, event, user, payment=None, use_balance=False):
        """–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–≤–∏—Ç–∫–∞ –∑ QR-–∫–æ–¥–æ–º"""
        # 1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–≤–æ—Ç–∏
        if event.tickets_sold >= event.max_attendees:
            raise EventSoldOut("–í—Å—ñ –∫–≤–∏—Ç–∫–∏ –ø—Ä–æ–¥–∞–Ω—ñ")
        
        # 2. –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–≤–∏—Ç–∫–∞
        ticket_number = self.generate_ticket_number()
        ticket = EventTicket.objects.create(
            event=event,
            user=user,
            ticket_number=ticket_number,
            payment=payment,
            used_balance=use_balance
        )
        
        # 3. –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è QR
        qr_data = {
            'ticket_id': ticket.id,
            'event_id': event.id,
            'user_id': user.id,
            'hash': self.generate_secure_hash(ticket)
        }
        ticket.qr_code = self.generate_qr_code(qr_data)
        ticket.save()
        
        # 4. –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ª—ñ—á–∏–ª—å–Ω–∏–∫–∞
        event.tickets_sold = F('tickets_sold') + 1
        event.save()
        
        # 5. –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∫–≤–∏—Ç–∫–∞
        send_ticket_email.delay(ticket.id)
        
        return ticket
```

### 7.2 –ë–∞–ª–∞–Ω—Å –∫–≤–∏—Ç–∫—ñ–≤ Pro-Vision
```python
# subscription_benefits.py
class ProVisionBenefits:
    """–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –±–∞–ª–∞–Ω—Å–æ–º –∫–≤–∏—Ç–∫—ñ–≤ –¥–ª—è –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤"""
    
    TICKET_BALANCE = {
        '1_month': 1,
        '3_months': 4,
        '12_months': 20
    }
    
    def grant_monthly_tickets(self, subscription):
        """–©–æ–º—ñ—Å—è—á–Ω–µ –Ω–∞—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –∫–≤–∏—Ç–∫—ñ–≤"""
        if subscription.plan.is_pro_vision:
            balance = self.TICKET_BALANCE.get(subscription.plan.duration, 0)
            
            TicketBalance.objects.create(
                user=subscription.user,
                subscription=subscription,
                amount=balance,
                expires_at=subscription.end_date
            )
    
    def use_ticket_balance(self, user, event):
        """–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –∫–≤–∏—Ç–∫–∞ –∑ –±–∞–ª–∞–Ω—Å—É"""
        available = TicketBalance.objects.filter(
            user=user,
            amount__gt=0,
            expires_at__gt=timezone.now()
        ).order_by('expires_at')
        
        if not available.exists():
            return False
        
        # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –Ω–∞–π—Å—Ç–∞—Ä—à–æ–≥–æ –±–∞–ª–∞–Ω—Å—É
        balance = available.first()
        balance.amount = F('amount') - 1
        balance.save()
        
        # –õ–æ–≥—É–≤–∞–Ω–Ω—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
        TicketUsage.objects.create(
            balance=balance,
            event=event,
            used_at=timezone.now()
        )
        
        return True
```

### 7.3 QR —á–µ–∫-—ñ–Ω
```python
# event_checkin.py
class EventCheckInService:
    def validate_qr(self, qr_data):
        """–í–∞–ª—ñ–¥–∞—Ü—ñ—è QR-–∫–æ–¥—É –Ω–∞ –≤—Ö–æ–¥—ñ"""
        try:
            # 1. –†–æ–∑–ø–∞–∫—É–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö
            data = json.loads(base64.b64decode(qr_data))
            
            # 2. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–ø–∏—Å—É
            if not self.verify_hash(data):
                return {'valid': False, 'error': '–ù–µ–≤—ñ—Ä–Ω–∏–π QR-–∫–æ–¥'}
            
            # 3. –ü–æ—à—É–∫ –∫–≤–∏—Ç–∫–∞
            ticket = EventTicket.objects.get(
                id=data['ticket_id'],
                event_id=data['event_id'],
                user_id=data['user_id']
            )
            
            # 4. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å—É
            if ticket.status == 'used':
                return {
                    'valid': False, 
                    'error': '–ö–≤–∏—Ç–æ–∫ –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–∏–π',
                    'used_at': ticket.used_at
                }
            
            # 5. –í—ñ–¥–º—ñ—Ç–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
            ticket.status = 'used'
            ticket.used_at = timezone.now()
            ticket.save()
            
            return {
                'valid': True,
                'user': ticket.user.profile.full_name,
                'event': ticket.event.title
            }
            
        except (EventTicket.DoesNotExist, json.JSONDecodeError):
            return {'valid': False, 'error': '–ö–≤–∏—Ç–æ–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ'}
```

---

## 8. AI-–ê–ì–ï–ù–¢

### 8.1 –ê—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∞ AI —Å–∏—Å—Ç–µ–º–∏
```python
# ai_architecture.py
class AIAgentService:
    def __init__(self):
        self.llm_client = OpenAIClient()  # –∞–±–æ —ñ–Ω—à–∏–π LLM
        self.vector_store = ChromaDB()     # –≤–µ–∫—Ç–æ—Ä–Ω–∞ –ë–î
        self.knowledge_base = KnowledgeBase()
        
    def process_query(self, query, user):
        """–û–±—Ä–æ–±–∫–∞ –∑–∞–ø–∏—Ç—É –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É"""
        # 1. –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        user_context = self.get_user_context(user)
        
        # 2. –í–µ–∫—Ç–æ—Ä–Ω–∏–π –ø–æ—à—É–∫ –≤ –±–∞–∑—ñ –∑–Ω–∞–Ω—å
        relevant_docs = self.vector_store.similarity_search(
            query=query,
            filter=self.get_access_filter(user),
            k=5
        )
        
        # 3. –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –ø—Ä–æ–º–ø—Ç—É –∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
        prompt = self.build_prompt(
            query=query,
            context=relevant_docs,
            user_level=user_context['access_level']
        )
        
        # 4. –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ LLM
        response = self.llm_client.generate(prompt)
        
        # 5. –ü–æ—Å—Ç–æ–±—Ä–æ–±–∫–∞ —Ç–∞ –≥–µ–π—Ç–∏–Ω–≥
        filtered_response = self.apply_content_gating(
            response=response,
            user_level=user_context['access_level']
        )
        
        # 6. –õ–æ–≥—É–≤–∞–Ω–Ω—è
        AIQueryLog.objects.create(
            user=user,
            query=query,
            response=filtered_response,
            context_docs=relevant_docs
        )
        
        return filtered_response
```

### 8.2 –†—ñ–≤–Ω—ñ –¥–æ—Å—Ç—É–ø—É –¥–æ AI
```python
# ai_access_levels.py
class AIAccessPolicy:
    """–ü–æ–ª—ñ—Ç–∏–∫–∞ –¥–æ—Å—Ç—É–ø—É –¥–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π AI"""
    
    POLICIES = {
        'guest': {
            'allowed_topics': ['general', 'public'],
            'max_response_length': 200,
            'include_links': False,
            'cta_message': '–ó–∞—Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—å –¥–ª—è –ø–æ–≤–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø—É'
        },
        'registered': {
            'allowed_topics': ['general', 'public', 'basic'],
            'max_response_length': 500,
            'include_links': True,
            'show_previews': True,
            'cta_message': '–û—Ñ–æ—Ä–º—ñ—Ç—å –ø—ñ–¥–ø–∏—Å–∫—É –¥–ª—è –µ–∫—Å–ø–µ—Ä—Ç–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π'
        },
        'subscriber_l1': {
            'allowed_topics': ['all'],
            'max_response_length': 1000,
            'include_links': True,
            'show_content': ['basic', 'intermediate']
        },
        'subscriber_l2': {
            'allowed_topics': ['all'],
            'max_response_length': 2000,
            'include_links': True,
            'show_content': ['all']
        },
        'admin': {
            'allowed_topics': ['all'],
            'max_response_length': None,
            'include_links': True,
            'show_content': ['all'],
            'debug_mode': True
        }
    }
    
    def filter_response(self, response, user_level):
        """–§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –∑–≥—ñ–¥–Ω–æ –∑ —Ä—ñ–≤–Ω–µ–º –¥–æ—Å—Ç—É–ø—É"""
        policy = self.POLICIES.get(user_level, self.POLICIES['guest'])
        
        # –û–±—Ä—ñ–∑–∞–Ω–Ω—è –¥–æ–≤–∂–∏–Ω–∏
        if policy['max_response_length']:
            response = response[:policy['max_response_length']]
        
        # –í–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω—å –Ω–∞ –ø–ª–∞—Ç–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
        if not policy.get('include_links'):
            response = self.remove_premium_links(response)
        
        # –î–æ–¥–∞–≤–∞–Ω–Ω—è CTA
        if policy.get('cta_message'):
            response += f"\n\nüí° {policy['cta_message']}"
        
        return response
```

### 8.3 –í–µ–∫—Ç–æ—Ä–Ω–µ —ñ–Ω–¥–µ–∫—Å—É–≤–∞–Ω–Ω—è
```python
# vector_indexing.py
class ContentIndexer:
    """–Ü–Ω–¥–µ–∫—Å—É–≤–∞–Ω–Ω—è –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤ –¥–ª—è AI –ø–æ—à—É–∫—É"""
    
    def index_course(self, course):
        """–Ü–Ω–¥–µ–∫—Å—É–≤–∞–Ω–Ω—è –∫—É—Ä—Å—É –∑ –º–µ—Ç–∞–¥–∞–Ω–∏–º–∏"""
        # 1. –†–æ–∑–±–∏—Ç—Ç—è –Ω–∞ —á–∞–Ω–∫–∏
        chunks = []
        
        # –Ü–Ω–¥–µ–∫—Å—É—î–º–æ –æ–ø–∏—Å
        chunks.append({
            'content': course.description,
            'metadata': {
                'type': 'course',
                'id': course.id,
                'title': course.title,
                'access_level': course.access_level,
                'tags': list(course.tags.values_list('name', flat=True))
            }
        })
        
        # –Ü–Ω–¥–µ–∫—Å—É—î–º–æ —É—Ä–æ–∫–∏
        for lesson in course.lessons.all():
            if lesson.content_type == 'article':
                lesson_chunks = self.split_text(lesson.article_content)
                for chunk in lesson_chunks:
                    chunks.append({
                        'content': chunk,
                        'metadata': {
                            'type': 'lesson',
                            'course_id': course.id,
                            'lesson_id': lesson.id,
                            'access_level': course.access_level
                        }
                    })
        
        # 2. –í–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è
        embeddings = self.embedding_model.encode(
            [c['content'] for c in chunks]
        )
        
        # 3. –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ –≤–µ–∫—Ç–æ—Ä–Ω—É –ë–î
        self.vector_store.add(
            embeddings=embeddings,
            metadatas=[c['metadata'] for c in chunks],
            ids=[f"{c['metadata']['type']}_{c['metadata']['id']}" for c in chunks]
        )
```

---

## 9. PWA –¢–ê –°–ü–û–í–Ü–©–ï–ù–ù–Ø

### 9.1 PWA –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
```javascript
// manifest.json
{
    "name": "Play Vision",
    "short_name": "PlayVision",
    "description": "–û—Å–≤—ñ—Ç–Ω—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Ñ—É—Ç–±–æ–ª—å–Ω–∏—Ö —Ñ–∞—Ö—ñ–≤—Ü—ñ–≤",
    "start_url": "/",
    "display": "standalone",
    "background_color": "#ffffff",
    "theme_color": "#ff6b35",
    "orientation": "portrait-primary",
    "icons": [
        {
            "src": "/static/icons/icon-72x72.png",
            "sizes": "72x72",
            "type": "image/png"
        },
        {
            "src": "/static/icons/icon-192x192.png",
            "sizes": "192x192",
            "type": "image/png"
        },
        {
            "src": "/static/icons/icon-512x512.png",
            "sizes": "512x512",
            "type": "image/png",
            "purpose": "any maskable"
        }
    ],
    "categories": ["education", "sports"],
    "lang": "uk-UA"
}
```

### 9.2 Service Worker
```javascript
// service-worker.js
const CACHE_NAME = 'playvision-v1';
const STATIC_CACHE = 'static-v1';
const DYNAMIC_CACHE = 'dynamic-v1';

// –ö–µ—à—É–≤–∞–Ω–Ω—è –ª–∏—à–µ –ø—É–±–ª—ñ—á–Ω–∏—Ö —Ä–µ—Å—É—Ä—Å—ñ–≤
const CACHEABLE_PATHS = [
    '/',
    '/about/',
    '/contacts/',
    '/static/css/main.css',
    '/static/js/main.js',
    '/static/icons/'
];

// –û—Ñ–ª–∞–π–Ω —Å—Ç–æ—Ä—ñ–Ω–∫–∞
self.addEventListener('install', event => {
    event.waitUntil(
        caches.open(STATIC_CACHE).then(cache => {
            return cache.addAll(CACHEABLE_PATHS);
        })
    );
});

// –°—Ç—Ä–∞—Ç–µ–≥—ñ—è –∫–µ—à—É–≤–∞–Ω–Ω—è
self.addEventListener('fetch', event => {
    const { request } = event;
    const url = new URL(request.url);
    
    // –ù—ñ–∫–æ–ª–∏ –Ω–µ –∫–µ—à—É–≤–∞—Ç–∏ –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
    if (url.pathname.includes('/account/') || 
        url.pathname.includes('/api/') ||
        url.pathname.includes('/media/protected/')) {
        event.respondWith(fetch(request));
        return;
    }
    
    // Cache-first –¥–ª—è —Å—Ç–∞—Ç–∏–∫–∏
    if (url.pathname.startsWith('/static/')) {
        event.respondWith(
            caches.match(request).then(response => {
                return response || fetch(request).then(fetchResponse => {
                    return caches.open(DYNAMIC_CACHE).then(cache => {
                        cache.put(request, fetchResponse.clone());
                        return fetchResponse;
                    });
                });
            })
        );
        return;
    }
    
    // Network-first –¥–ª—è HTML
    event.respondWith(
        fetch(request).catch(() => {
            return caches.match(request);
        })
    );
});
```

### 9.3 Push-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
```python
# push_notifications.py
class PushNotificationService:
    """–°–µ—Ä–≤—ñ—Å push-—Å–ø–æ–≤—ñ—â–µ–Ω—å –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é iOS PWA"""
    
    def setup_vapid(self):
        """–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è VAPID –∫–ª—é—á—ñ–≤"""
        if not settings.VAPID_PRIVATE_KEY:
            vapid = Vapid()
            vapid.generate_keys()
            # –ó–±–µ—Ä–µ–≥—Ç–∏ –≤ settings
        
    def subscribe_user(self, user, subscription_info):
        """–ü—ñ–¥–ø–∏—Å–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ push"""
        PushSubscription.objects.update_or_create(
            user=user,
            defaults={
                'endpoint': subscription_info['endpoint'],
                'p256dh': subscription_info['keys']['p256dh'],
                'auth': subscription_info['keys']['auth'],
                'is_active': True
            }
        )
    
    def send_push(self, user, title, body, data=None):
        """–í—ñ–¥–ø—Ä–∞–≤–∫–∞ push-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è"""
        subscriptions = PushSubscription.objects.filter(
            user=user,
            is_active=True
        )
        
        for subscription in subscriptions:
            try:
                webpush(
                    subscription_info={
                        'endpoint': subscription.endpoint,
                        'keys': {
                            'p256dh': subscription.p256dh,
                            'auth': subscription.auth
                        }
                    },
                    data=json.dumps({
                        'title': title,
                        'body': body,
                        'icon': '/static/icons/icon-192x192.png',
                        'badge': '/static/icons/badge-72x72.png',
                        'data': data or {},
                        'actions': [
                            {'action': 'open', 'title': '–í—ñ–¥–∫—Ä–∏—Ç–∏'},
                            {'action': 'close', 'title': '–ó–∞–∫—Ä–∏—Ç–∏'}
                        ]
                    }),
                    vapid_private_key=settings.VAPID_PRIVATE_KEY,
                    vapid_claims={
                        'sub': f'mailto:{settings.DEFAULT_FROM_EMAIL}'
                    }
                )
            except WebPushException as e:
                # –î–µ–∞–∫—Ç–∏–≤–∞—Ü—ñ—è –Ω–µ–≤–∞–ª—ñ–¥–Ω–æ—ó –ø—ñ–¥–ø–∏—Å–∫–∏
                if e.response.status_code == 410:
                    subscription.is_active = False
                    subscription.save()
```

### 9.4 iOS Safari —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞
```javascript
// ios-pwa-helper.js
class iOSPWAHelper {
    constructor() {
        this.isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);
        this.isInStandaloneMode = window.matchMedia('(display-mode: standalone)').matches;
    }
    
    init() {
        if (this.isIOS && !this.isInStandaloneMode) {
            this.showInstallPrompt();
        }
        
        if (this.isIOS && this.isInStandaloneMode) {
            this.enablePushNotifications();
        }
    }
    
    showInstallPrompt() {
        // –ü–æ–∫–∞–∑–∞—Ç–∏ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—é –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–∞ –¥–æ–º–∞—à–Ω—ñ–π –µ–∫—Ä–∞–Ω
        const prompt = document.createElement('div');
        prompt.className = 'ios-install-prompt';
        prompt.innerHTML = `
            <p>–í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å Play Vision –Ω–∞ –¥–æ–º–∞—à–Ω—ñ–π –µ–∫—Ä–∞–Ω:</p>
            <ol>
                <li>–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å <img src="/static/icons/ios-share.svg" alt="Share"></li>
                <li>–í–∏–±–µ—Ä—ñ—Ç—å "–ù–∞ –µ–∫—Ä–∞–Ω –î–æ–º—ñ–≤–∫–∞"</li>
            </ol>
            <button onclick="this.parentElement.remove()">–ó–∞–∫—Ä–∏—Ç–∏</button>
        `;
        document.body.appendChild(prompt);
    }
    
    enablePushNotifications() {
        // Push –ø—Ä–∞—Ü—é—î —Ç—ñ–ª—å–∫–∏ –≤ standalone —Ä–µ–∂–∏–º—ñ –Ω–∞ iOS
        if ('Notification' in window && 'serviceWorker' in navigator) {
            Notification.requestPermission().then(permission => {
                if (permission === 'granted') {
                    this.subscribeToPush();
                }
            });
        }
    }
}
```

---

## 10. –ê–î–ú–Ü–ù–ö–ê –¢–ê –ê–ù–ê–õ–Ü–¢–ò–ö–ê

### 10.1 CMS —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª
```python
# cms/admin.py
class CourseAdmin(admin.ModelAdmin):
    list_display = ['title', 'category', 'price', 'is_featured', 'created_at']
    list_filter = ['category', 'difficulty', 'is_featured', 'is_free']
    search_fields = ['title', 'description']
    
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è', {
            'fields': ('title', 'slug', 'description', 'category', 'tags')
        }),
        ('–¶—ñ–Ω–∞ —Ç–∞ –¥–æ—Å—Ç—É–ø', {
            'fields': ('price', 'is_free', 'requires_subscription', 'subscription_tiers')
        }),
        ('–ö–æ–Ω—Ç–µ–Ω—Ç-–≥–µ–π—Ç–∏–Ω–≥', {
            'fields': ('has_preview', 'preview_duration', 'gated_blocks'),
            'classes': ('collapse',)
        }),
        ('SEO', {
            'fields': ('meta_title', 'meta_description', 'og_image'),
            'classes': ('collapse',)
        })
    )
    
    def get_queryset(self, request):
        qs = super().get_queryset(request)
        return qs.annotate(
            students_count=Count('enrollments'),
            avg_rating=Avg('reviews__rating')
        )
```

### 10.2 GatedBlock –≤ CMS
```python
# cms/models.py
class GatedBlock(models.Model):
    """–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç-–≥–µ–π—Ç–∏–Ω–≥—É –¥–ª—è –±–ª–æ–∫—ñ–≤"""
    content_type = models.ForeignKey(ContentType, on_delete=models.CASCADE)
    object_id = models.PositiveIntegerField()
    content_object = GenericForeignKey('content_type', 'object_id')
    
    # –ü—Ä–∞–≤–∏–ª–∞ –¥–æ—Å—Ç—É–ø—É
    access_rules = models.JSONField(default=dict)
    # {
    #     "subscription_required": true,
    #     "allowed_tiers": ["l1", "l2", "l3"],
    #     "preview_allowed": true,
    #     "preview_percentage": 10
    # }
    
    # CTA –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
    cta_text = models.CharField(max_length=200)
    cta_button_text = models.CharField(max_length=50)
    cta_link = models.CharField(max_length=200)
    
    class Meta:
        unique_together = ['content_type', 'object_id']
```

### 10.3 Pixel Manager
```python
# analytics/pixel_manager.py
class PixelManager:
    """–¶–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–µ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø—ñ–∫—Å–µ–ª—è–º–∏"""
    
    EVENTS = {
        'view_item': {
            'ga4': 'view_item',
            'meta': 'ViewContent',
            'tiktok': 'ViewContent'
        },
        'add_to_cart': {
            'ga4': 'add_to_cart',
            'meta': 'AddToCart',
            'tiktok': 'AddToCart'
        },
        'begin_checkout': {
            'ga4': 'begin_checkout',
            'meta': 'InitiateCheckout',
            'tiktok': 'InitiateCheckout'
        },
        'purchase': {
            'ga4': 'purchase',
            'meta': 'Purchase',
            'tiktok': 'CompletePayment'
        },
        'subscribe': {
            'ga4': 'sign_up',
            'meta': 'Subscribe',
            'tiktok': 'Subscribe'
        }
    }
    
    def get_enabled_pixels(self):
        """–û—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö –ø—ñ–∫—Å–µ–ª—ñ–≤"""
        return PixelConfig.objects.filter(is_enabled=True)
    
    def track_event(self, event_name, parameters, user=None):
        """–¢—Ä–µ–∫—ñ–Ω–≥ –ø–æ–¥—ñ—ó –Ω–∞ –≤—Å—ñ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö"""
        pixels = self.get_enabled_pixels()
        
        for pixel in pixels:
            if pixel.platform == 'ga4':
                self.track_ga4(event_name, parameters)
            elif pixel.platform == 'meta':
                self.track_meta(event_name, parameters, user)
            elif pixel.platform == 'tiktok':
                self.track_tiktok(event_name, parameters)
    
    def track_server_side(self, event_name, parameters, user):
        """Server-side —Ç—Ä–µ–∫—ñ–Ω–≥ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Å—ñ–π"""
        # Meta Conversions API
        if self.is_enabled('meta'):
            self.meta_capi.track(
                event_name=self.EVENTS[event_name]['meta'],
                event_time=int(time.time()),
                user_data={
                    'email_hash': hashlib.sha256(user.email.encode()).hexdigest(),
                    'phone_hash': hashlib.sha256(user.phone.encode()).hexdigest() if user.phone else None,
                    'client_ip_address': parameters.get('ip_address'),
                    'client_user_agent': parameters.get('user_agent')
                },
                custom_data=parameters
            )
```

### 10.4 –ó–≤—ñ—Ç–∏ —Ç–∞ –º–µ—Ç—Ä–∏–∫–∏
```python
# analytics/reports.py
class ReportGenerator:
    """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∑–≤—ñ—Ç—ñ–≤ –¥–ª—è –∞–¥–º—ñ–Ω–∫–∏"""
    
    def sales_report(self, date_from, date_to):
        """–ó–≤—ñ—Ç –ø—Ä–æ–¥–∞–∂—ñ–≤"""
        return {
            'revenue': Payment.objects.filter(
                status='completed',
                created_at__range=[date_from, date_to]
            ).aggregate(total=Sum('amount'))['total'] or 0,
            
            'orders_count': Order.objects.filter(
                status='completed',
                created_at__range=[date_from, date_to]
            ).count(),
            
            'avg_order_value': Order.objects.filter(
                status='completed',
                created_at__range=[date_from, date_to]
            ).aggregate(avg=Avg('total'))['avg'] or 0,
            
            'top_products': Course.objects.annotate(
                sales=Count('orderitem', filter=Q(
                    orderitem__order__status='completed',
                    orderitem__order__created_at__range=[date_from, date_to]
                ))
            ).order_by('-sales')[:10],
            
            'conversion_funnel': self.calculate_funnel(date_from, date_to)
        }
    
    def calculate_funnel(self, date_from, date_to):
        """–†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –∫–æ–Ω–≤–µ—Ä—Å—ñ–π–Ω–æ—ó –≤–æ—Ä–æ–Ω–∫–∏"""
        period_filter = Q(created_at__range=[date_from, date_to])
        
        visitors = PageView.objects.filter(period_filter).values('session_id').distinct().count()
        cart_adds = CartEvent.objects.filter(period_filter, event_type='add').values('user').distinct().count()
        checkouts = Order.objects.filter(period_filter).values('user').distinct().count()
        purchases = Order.objects.filter(period_filter, status='completed').values('user').distinct().count()
        
        return {
            'visitors': visitors,
            'cart_adds': cart_adds,
            'cart_add_rate': (cart_adds / visitors * 100) if visitors else 0,
            'checkouts': checkouts,
            'checkout_rate': (checkouts / cart_adds * 100) if cart_adds else 0,
            'purchases': purchases,
            'purchase_rate': (purchases / checkouts * 100) if checkouts else 0,
            'overall_conversion': (purchases / visitors * 100) if visitors else 0
        }
```

---

## 11. –ë–ï–ó–ü–ï–ö–ê

### 11.1 –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–µ–∑–ø–µ–∫–∏
```python
# settings/security.py

# HTTPS —Ç–∞ HSTS
SECURE_SSL_REDIRECT = True
SECURE_HSTS_SECONDS = 31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

# Cookies
SESSION_COOKIE_SECURE = True
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SAMESITE = 'Lax'
CSRF_COOKIE_SECURE = True
CSRF_COOKIE_HTTPONLY = True

# CSP
CSP_DEFAULT_SRC = ("'self'",)
CSP_SCRIPT_SRC = (
    "'self'",
    "'nonce-{nonce}'",
    "https://js.stripe.com",
    "https://www.googletagmanager.com",
)
CSP_STYLE_SRC = (
    "'self'",
    "'unsafe-inline'",  # –î–ª—è inline —Å—Ç–∏–ª—ñ–≤
)
CSP_IMG_SRC = (
    "'self'",
    "data:",
    "https:",
)
CSP_CONNECT_SRC = (
    "'self'",
    "https://api.stripe.com",
    "https://www.google-analytics.com",
)
CSP_FRAME_SRC = (
    "'self'",
    "https://js.stripe.com",
    "https://www.youtube.com",
)

# Rate limiting
RATELIMIT_ENABLE = True
RATELIMIT_VIEW = '10/m'  # 10 –∑–∞–ø–∏—Ç—ñ–≤ –Ω–∞ —Ö–≤–∏–ª–∏–Ω—É –¥–ª—è views
RATELIMIT_LOGIN = '5/m'  # 5 —Å–ø—Ä–æ–± –≤—Ö–æ–¥—É –Ω–∞ —Ö–≤–∏–ª–∏–Ω—É
```

### 11.2 Middleware –±–µ–∑–ø–µ–∫–∏
```python
# security/middleware.py
class SecurityHeadersMiddleware:
    """–î–æ–¥–∞—Ç–∫–æ–≤—ñ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –±–µ–∑–ø–µ–∫–∏"""
    
    def __init__(self, get_response):
        self.get_response = get_response
    
    def __call__(self, request):
        response = self.get_response(request)
        
        # –î–æ–¥–∞—Ç–∫–æ–≤—ñ –∑–∞–≥–æ–ª–æ–≤–∫–∏
        response['X-Content-Type-Options'] = 'nosniff'
        response['X-Frame-Options'] = 'DENY'
        response['X-XSS-Protection'] = '1; mode=block'
        response['Referrer-Policy'] = 'strict-origin-when-cross-origin'
        response['Permissions-Policy'] = 'geolocation=(), microphone=(), camera=()'
        
        return response

class RateLimitMiddleware:
    """Rate limiting –¥–ª—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö endpoints"""
    
    LIMITS = {
        '/auth/login/': '5/m',
        '/auth/register/': '3/m',
        '/api/': '100/m',
        '/checkout/': '10/m'
    }
    
    def __init__(self, get_response):
        self.get_response = get_response
        self.cache = caches['default']
    
    def __call__(self, request):
        for path, limit in self.LIMITS.items():
            if request.path.startswith(path):
                key = f"ratelimit:{request.META.get('REMOTE_ADDR')}:{path}"
                
                try:
                    current = self.cache.incr(key)
                except ValueError:
                    self.cache.set(key, 1, 60)  # 1 —Ö–≤–∏–ª–∏–Ω–∞
                    current = 1
                
                max_requests = int(limit.split('/')[0])
                
                if current > max_requests:
                    return HttpResponse(
                        'Rate limit exceeded', 
                        status=429,
                        content_type='text/plain'
                    )
        
        return self.get_response(request)
```

### 11.3 –ó–∞—Ö–∏—Å—Ç –≤—ñ–¥ SSRF
```python
# security/validators.py
class URLValidator:
    """–í–∞–ª—ñ–¥–∞—Ü—ñ—è URL –¥–ª—è –∑–∞—Ö–∏—Å—Ç—É –≤—ñ–¥ SSRF"""
    
    BLOCKED_HOSTS = [
        'localhost',
        '127.0.0.1',
        '0.0.0.0',
        '169.254.169.254',  # AWS metadata
    ]
    
    BLOCKED_SCHEMES = ['file', 'ftp', 'gopher']
    
    def validate_url(self, url):
        """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ URL –Ω–∞ –±–µ–∑–ø–µ–∫—É"""
        parsed = urlparse(url)
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ö–µ–º–∏
        if parsed.scheme in self.BLOCKED_SCHEMES:
            raise ValidationError(f"–ó–∞–±–æ—Ä–æ–Ω–µ–Ω–∞ —Å—Ö–µ–º–∞: {parsed.scheme}")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ö–æ—Å—Ç–∞
        hostname = parsed.hostname
        if not hostname:
            raise ValidationError("–ù–µ–≤—ñ—Ä–Ω–∏–π URL")
        
        # –ë–ª–æ–∫—É–≤–∞–Ω–Ω—è –ª–æ–∫–∞–ª—å–Ω–∏—Ö –∞–¥—Ä–µ—Å
        if hostname in self.BLOCKED_HOSTS:
            raise ValidationError(f"–ó–∞–±–æ—Ä–æ–Ω–µ–Ω–∏–π —Ö–æ—Å—Ç: {hostname}")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ IP –∞–¥—Ä–µ—Å
        try:
            ip = ipaddress.ip_address(hostname)
            if ip.is_private or ip.is_loopback:
                raise ValidationError("–ü—Ä–∏–≤–∞—Ç–Ω—ñ IP –∞–¥—Ä–µ—Å–∏ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω—ñ")
        except ValueError:
            # –ù–µ IP –∞–¥—Ä–µ—Å–∞, —Ü–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ
            pass
        
        return True
```

### 11.4 –õ–æ–≥—É–≤–∞–Ω–Ω—è –±–µ–∑–ø–µ–∫–∏
```python
# security/logging.py
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'security': {
            'format': '[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S',
        },
    },
    'handlers': {
        'security_file': {
            'level': 'WARNING',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '/var/log/playvision/security.log',
            'maxBytes': 1024 * 1024 * 100,  # 100MB
            'backupCount': 10,
            'formatter': 'security',
        },
        'sentry': {
            'level': 'ERROR',
            'class': 'sentry_sdk.integrations.logging.SentryHandler',
        },
    },
    'loggers': {
        'security': {
            'handlers': ['security_file', 'sentry'],
            'level': 'INFO',
            'propagate': False,
        },
        'django.security': {
            'handlers': ['security_file'],
            'level': 'WARNING',
            'propagate': False,
        },
    },
}

# –ê—É–¥–∏—Ç –ø–æ–¥—ñ–π
class SecurityAuditLog:
    """–õ–æ–≥—É–≤–∞–Ω–Ω—è –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –¥—ñ–π"""
    
    @staticmethod
    def log_login(user, ip_address, user_agent, success=True):
        AuditLog.objects.create(
            user=user if success else None,
            action='login',
            success=success,
            ip_address=ip_address,
            user_agent=user_agent,
            metadata={
                'username': user.username if user else 'unknown'
            }
        )
    
    @staticmethod
    def log_payment(user, amount, payment_method, success=True):
        AuditLog.objects.create(
            user=user,
            action='payment',
            success=success,
            metadata={
                'amount': str(amount),
                'method': payment_method,
                'timestamp': timezone.now().isoformat()
            }
        )
```

---

## 12. –¢–ï–°–¢–£–í–ê–ù–ù–Ø

### 12.1 Unit —Ç–µ—Å—Ç–∏
```python
# tests/test_payments.py
class PaymentTestCase(TestCase):
    def setUp(self):
        self.user = User.objects.create_user(
            email='test@example.com',
            password='testpass123'
        )
        self.course = Course.objects.create(
            title='Test Course',
            price=100.00
        )
    
    def test_create_payment_intent(self):
        """–¢–µ—Å—Ç —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–ª–∞—Ç—ñ–∂–Ω–æ–≥–æ –Ω–∞–º—ñ—Ä—É"""
        order = Order.objects.create(
            user=self.user,
            total=100.00
        )
        
        service = StripePaymentProvider()
        intent = service.create_payment_intent(order, 'pm_test_123')
        
        self.assertIsNotNone(intent)
        self.assertEqual(intent.amount, 10000)  # –≤ –∫–æ–ø—ñ–π–∫–∞—Ö
        self.assertEqual(intent.metadata['order_id'], str(order.id))
    
    def test_3ds_challenge_required(self):
        """–¢–µ—Å—Ç –æ–±—Ä–æ–±–∫–∏ 3DS challenge"""
        # –°—Ç–≤–æ—Ä—é—î–º–æ payment intent —â–æ –≤–∏–º–∞–≥–∞—î 3DS
        intent = stripe.PaymentIntent.create(
            amount=10000,
            currency='uah',
            payment_method='pm_card_threeDSecureRequired',
            confirm=True
        )
        
        service = StripePaymentProvider()
        result = service.handle_3ds_challenge(intent.id)
        
        self.assertTrue(result['requires_action'])
        self.assertIsNotNone(result['client_secret'])
```

### 12.2 –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ–π–Ω—ñ —Ç–µ—Å—Ç–∏
```python
# tests/test_integration.py
class SubscriptionFlowTest(TransactionTestCase):
    """–¢–µ—Å—Ç –ø–æ–≤–Ω–æ–≥–æ —Ñ–ª–æ—É –ø—ñ–¥–ø–∏—Å–∫–∏"""
    
    def test_subscription_purchase_flow(self):
        # 1. –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        response = self.client.post('/auth/register/', {
            'email': 'newuser@example.com',
            'password': 'StrongPass123!',
            'agree_terms': True
        })
        self.assertEqual(response.status_code, 302)
        
        # 2. –í–∏–±—ñ—Ä –ø–ª–∞–Ω—É
        response = self.client.get('/pricing/')
        self.assertContains(response, '–û–±–µ—Ä—ñ—Ç—å –ø–ª–∞–Ω')
        
        # 3. –î–æ–¥–∞–≤–∞–Ω–Ω—è –≤ –∫–æ—à–∏–∫
        plan = Plan.objects.get(duration='1_month')
        response = self.client.post('/api/cart/add/', {
            'item_type': 'subscription',
            'item_id': plan.id
        })
        self.assertEqual(response.status_code, 200)
        
        # 4. –ß–µ–∫–∞—É—Ç
        response = self.client.post('/checkout/', {
            'payment_method': 'pm_card_visa',
            'agree_terms': True
        })
        
        # 5. –û–±—Ä–æ–±–∫–∞ webhook
        webhook_data = {
            'type': 'payment_intent.succeeded',
            'data': {
                'object': {
                    'id': 'pi_test_123',
                    'metadata': {'order_id': '1'}
                }
            }
        }
        
        response = self.client.post(
            '/webhooks/payment/',
            data=json.dumps(webhook_data),
            content_type='application/json',
            HTTP_STRIPE_SIGNATURE='test_sig'
        )
        
        # 6. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –ø—ñ–¥–ø–∏—Å–∫–∏
        user = User.objects.get(email='newuser@example.com')
        self.assertTrue(user.subscriptions.filter(status='active').exists())
```

### 12.3 E2E —Ç–µ—Å—Ç–∏
```javascript
// tests/e2e/test_paywall.js
describe('Content Paywall Flow', () => {
    it('should show preview and then paywall', async () => {
        // 1. –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –∫—É—Ä—Å –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
        await page.goto('/hub/course/python-basics/');
        
        // 2. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å preview –∫–Ω–æ–ø–∫–∏
        const previewBtn = await page.$('.preview-button');
        expect(previewBtn).toBeTruthy();
        
        // 3. –ö–ª—ñ–∫–∞—î–º–æ preview
        await previewBtn.click();
        
        // 4. –ß–µ–∫–∞—î–º–æ 20 —Å–µ–∫—É–Ω–¥ –≤—ñ–¥–µ–æ
        await page.waitForTimeout(20000);
        
        // 5. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ—è–≤—É paywall
        const paywall = await page.$('.paywall-overlay');
        expect(paywall).toBeTruthy();
        
        // 6. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ CTA –∫–Ω–æ–ø–∫–∏
        const ctaButtons = await page.$$('.paywall-cta button');
        expect(ctaButtons.length).toBeGreaterThan(0);
        
        // 7. –ö–ª—ñ–∫–∞—î–º–æ "–í—Å—Ç—É–ø–∏—Ç–∏ –≤ –∫–ª—É–±"
        await ctaButtons[0].click();
        
        // 8. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–¥—ñ—Ä–µ–∫—Ç –Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é
        await page.waitForNavigation();
        expect(page.url()).toContain('/auth/register/');
    });
});
```

### 12.4 –¢–µ—Å—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
```python
# tests/test_performance.py
class PerformanceTest(TestCase):
    def test_lighthouse_scores(self):
        """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Lighthouse –º–µ—Ç—Ä–∏–∫"""
        urls = ['/', '/hub/', '/events/', '/pricing/']
        
        for url in urls:
            result = run_lighthouse(url)
            
            # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫
            self.assertGreaterEqual(
                result['performance'], 90,
                f"Performance score for {url} is too low"
            )
            self.assertGreaterEqual(
                result['accessibility'], 90,
                f"Accessibility score for {url} is too low"
            )
            self.assertGreaterEqual(
                result['best-practices'], 90,
                f"Best practices score for {url} is too low"
            )
            self.assertGreaterEqual(
                result['seo'], 90,
                f"SEO score for {url} is too low"
            )
```

### 12.5 Acceptance –∫—Ä–∏—Ç–µ—Ä—ñ—ó

#### –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è
- [ ] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–æ–∂–µ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å —á–µ—Ä–µ–∑ email/—Ç–µ–ª–µ—Ñ–æ–Ω
- [ ] –ü—Ä–∞—Ü—é—î OAuth —á–µ—Ä–µ–∑ Google/Telegram/TikTok
- [ ] –í—ñ–¥–ø—Ä–∞–≤–ª—è—î—Ç—å—Å—è –∫–æ–¥ –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
- [ ] –ü—Ä–∞—Ü—é—î –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é
- [ ] Rate limiting –±–ª–æ–∫—É—î –±—Ä—É—Ç—Ñ–æ—Ä—Å

#### –ö–æ–Ω—Ç–µ–Ω—Ç —Ç–∞ paywall
- [ ] –ì—ñ—Å—Ç—å –±–∞—á–∏—Ç—å blur + –∑–∞–º–æ–∫ –Ω–∞ –ø–ª–∞—Ç–Ω–æ–º—É –∫–æ–Ω—Ç–µ–Ω—Ç—ñ
- [ ] Preview –≤—ñ–¥–µ–æ –≥—Ä–∞—î 20 —Å–µ–∫—É–Ω–¥
- [ ] Preview PDF –ø–æ–∫–∞–∑—É—î 10%
- [ ] CTA –∫–Ω–æ–ø–∫–∏ –≤–µ–¥—É—Ç—å –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
- [ ] –ü—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç —Ä–æ–∑–±–ª–æ–∫–æ–≤—É—î—Ç—å—Å—è

#### –ü–ª–∞—Ç–µ–∂—ñ
- [ ] 3DS challenge –ø—Ä–∞—Ü—é—î –∫–æ—Ä–µ–∫—Ç–Ω–æ
- [ ] Webhook –æ–±—Ä–æ–±–ª—è—é—Ç—å—Å—è —ñ–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω–æ
- [ ] –ü—ñ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤—É—î—Ç—å—Å—è –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏
- [ ] –ê–≤—Ç–æ–ø—Ä–æ–ª–æ–Ω–≥–∞—Ü—ñ—è –ø—Ä–∞—Ü—é—î
- [ ] –°–∫–∞—Å—É–≤–∞–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–∫–∏ –ø—Ä–∞—Ü—é—î

#### PWA
- [ ] –î–æ–¥–∞—î—Ç—å—Å—è –Ω–∞ –¥–æ–º–∞—à–Ω—ñ–π –µ–∫—Ä–∞–Ω
- [ ] –ü—Ä–∞—Ü—é—î –≤ offline –¥–ª—è –ø—É–±–ª—ñ—á–Ω–∏—Ö —Å—Ç–æ—Ä—ñ–Ω–æ–∫
- [ ] Push-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –¥–æ—Å—Ç–∞–≤–ª—è—é—Ç—å—Å—è
- [ ] –ù–∞ iOS –ø–æ–∫–∞–∑—É—î—Ç—å—Å—è —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è

---

## 13. –ü–õ–ê–ù –í–ò–ü–£–°–ö–Ü–í

### 13.1 –ï—Ç–∞–ø 1: –§—É–Ω–¥–∞–º–µ–Ω—Ç (4 —Ç–∏–∂–Ω—ñ)
**–ú–µ—Ç–∞**: –ë–∞–∑–æ–≤–∞ —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞ –ø—É–±–ª—ñ—á–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏

#### –ó–∞–≤–¥–∞–Ω–Ω—è
1. **–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–æ—î–∫—Ç—É**
   - Django –ø—Ä–æ—î–∫—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
   - Docker –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
   - CI/CD pipeline
   - –ë–∞–∑–æ–≤—ñ –º–æ–¥–µ–ª—ñ User, Profile

2. **–ü—É–±–ª—ñ—á–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏**
   - –ì–æ–ª–æ–≤–Ω–∞ –∑ hero-–∫–∞—Ä—É—Å–µ–ª–ª—é
   - –ü—Ä–æ –Ω–∞—Å, –ö–æ–Ω—Ç–∞–∫—Ç–∏
   - –ë–∞–∑–æ–≤–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è
   - Responsive –¥–∏–∑–∞–π–Ω

3. **–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è**
   - –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è/–≤—Ö—ñ–¥
   - Email –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è
   - OAuth —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è
   - –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é

4. **PWA –∫–∞—Ä–∫–∞—Å**
   - Service Worker
   - Manifest.json
   - –û—Ñ–ª–∞–π–Ω —Å—Ç–æ—Ä—ñ–Ω–∫–∞
   - –ë–∞–∑–æ–≤–µ –∫–µ—à—É–≤–∞–Ω–Ω—è

#### –ê—Ä—Ç–µ—Ñ–∞–∫—Ç–∏
- –ü—Ä–∞—Ü—é—é—á–∏–π —Å–∞–π—Ç –Ω–∞ staging
- –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è API
- –¢–µ—Å—Ç–∏ –¥–ª—è auth flows

#### –ö—Ä–∏—Ç–µ—Ä—ñ—ó –ø—Ä–∏–π–º–∞–Ω–Ω—è
- –í—Å—ñ –ø—É–±–ª—ñ—á–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ
- –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —Ç–∞ –≤—Ö—ñ–¥ –ø—Ä–∞—Ü—é—é—Ç—å
- Mobile responsive
- Lighthouse > 80

### 13.2 –ï—Ç–∞–ø 2: –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü—ñ—è (6 —Ç–∏–∂–Ω—ñ–≤)
**–ú–µ—Ç–∞**: –•–∞–± –∑–Ω–∞–Ω—å, –ø–ª–∞—Ç–µ–∂—ñ, –ø—ñ–¥–ø–∏—Å–∫–∏

#### –ó–∞–≤–¥–∞–Ω–Ω—è
1. **–•–∞–± –∑–Ω–∞–Ω—å**
   - –ú–æ–¥–µ–ª—ñ Course, Material
   - –ö–∞—Ç–∞–ª–æ–≥ –∑ —Ñ—ñ–ª—å—Ç—Ä–∞–º–∏
   - –ü–æ—à—É–∫ —Ç–∞ —Ç–µ–≥–∏
   - –î–µ—Ç–∞–ª—å–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏

2. **–ö–æ–Ω—Ç–µ–Ω—Ç-–≥–µ–π—Ç–∏–Ω–≥**
   - Paywall –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏
   - Preview –ª–æ–≥—ñ–∫–∞
   - –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø—É
   - CTA –±–ª–æ–∫–∏

3. **–ö–æ—à–∏–∫ —Ç–∞ —á–µ–∫–∞—É—Ç**
   - Session/DB –∫–æ—à–∏–∫
   - –ü—Ä–æ–º–æ–∫–æ–¥–∏
   - –§–æ—Ä–º–∞ —á–µ–∫–∞—É—Ç—É
   - UI/UX –∞–Ω—ñ–º–∞—Ü—ñ—ó

4. **–ü–ª–∞—Ç—ñ–∂–Ω–∞ —Å–∏—Å—Ç–µ–º–∞**
   - Stripe —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è
   - 3DS –æ–±—Ä–æ–±–∫–∞
   - Webhook endpoints
   - –ü–ª–∞—Ç—ñ–∂–Ω—ñ –º–æ–¥–µ–ª—ñ

5. **–ü—ñ–¥–ø–∏—Å–∫–∏**
   - 4 —Ä—ñ–≤–Ω—ñ –ø–ª–∞–Ω—ñ–≤
   - –ê–≤—Ç–æ–ø—Ä–æ–ª–æ–Ω–≥–∞—Ü—ñ—è
   - –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –≤ –∫–∞–±—ñ–Ω–µ—Ç—ñ
   - Email –Ω–æ—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó

6. **–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞**
   - GA4, Meta Pixel
   - –í–Ω—É—Ç—Ä—ñ—à–Ω—ñ –º–µ—Ç—Ä–∏–∫–∏
   - –ö–æ–Ω–≤–µ—Ä—Å—ñ–π–Ω—ñ –≤–æ—Ä–æ–Ω–∫–∏
   - Server-side events

#### –ê—Ä—Ç–µ—Ñ–∞–∫—Ç–∏
- –ü–æ–≤–Ω–∏–π —Ü–∏–∫–ª –ø–æ–∫—É–ø–∫–∏
- –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è –ø–ª–∞—Ç–µ–∂—ñ–≤
- –¢–µ—Å—Ç–∏ E2E –¥–ª—è checkout

#### –ö—Ä–∏—Ç–µ—Ä—ñ—ó –ø—Ä–∏–π–º–∞–Ω–Ω—è
- –ú–æ–∂–Ω–∞ –∫—É–ø–∏—Ç–∏ –∫—É—Ä—Å
- –ü—ñ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤—É—î—Ç—å—Å—è
- 3DS –ø—Ä–∞—Ü—é—î
- –ö–æ–Ω—Ç–µ–Ω—Ç –±–ª–æ–∫—É—î—Ç—å—Å—è/—Ä–æ–∑–±–ª–æ–∫–æ–≤—É—î—Ç—å—Å—è

### 13.3 –ï—Ç–∞–ø 3: –†–æ–∑—à–∏—Ä–µ–Ω–Ω—è (6 —Ç–∏–∂–Ω—ñ–≤)
**–ú–µ—Ç–∞**: –ü–æ–≤–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —Ç–∞ –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è

#### –ó–∞–≤–¥–∞–Ω–Ω—è
1. **–û—Å–æ–±–∏—Å—Ç–∏–π –∫–∞–±—ñ–Ω–µ—Ç**
   - –í—Å—ñ —Ä–æ–∑–¥—ñ–ª–∏ –∫–∞–±—ñ–Ω–µ—Ç—É
   - –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª–µ–º
   - –Ü—Å—Ç–æ—Ä—ñ—è —Ç–∞ –ø—Ä–æ–≥—Ä–µ—Å
   - –ü—Ä–æ–≥—Ä–∞–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç—ñ

2. **–Ü–≤–µ–Ω—Ç–∏**
   - –ö–∞–ª–µ–Ω–¥–∞—Ä –ø–æ–¥—ñ–π
   - –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è/–∫–≤–∏—Ç–∫–∏
   - QR check-in
   - –ë–∞–ª–∞–Ω—Å –∫–≤–∏—Ç–∫—ñ–≤

3. **AI-–∞–≥–µ–Ω—Ç**
   - –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è LLM
   - –í–µ–∫—Ç–æ—Ä–Ω–∞ –ë–î
   - –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∏–π –ø–æ—à—É–∫
   - –†—ñ–≤–Ω—ñ –¥–æ—Å—Ç—É–ø—É

4. **–ú–µ–¥—ñ–∞ –∑–∞—Ö–∏—Å—Ç**
   - HLS streaming
   - –í–æ–¥—è–Ω—ñ –∑–Ω–∞–∫–∏
   - –ü—ñ–¥–ø–∏—Å–∞–Ω—ñ URL
   - CDN —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è

5. **Push-—Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è**
   - VAPID setup
   - –ü—ñ–¥–ø–∏—Å–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
   - iOS –ø—ñ–¥—Ç—Ä–∏–º–∫–∞
   - –°–µ–≥–º–µ–Ω—Ç–∞—Ü—ñ—è

6. **CMS —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è**
   - –ü–æ–≤–Ω–∞ –∞–¥–º—ñ–Ω–∫–∞
   - –ó–≤—ñ—Ç–∏ —Ç–∞ –º–µ—Ç—Ä–∏–∫–∏
   - A/B —Ç–µ—Å—Ç–∏
   - SEO tools

#### –ê—Ä—Ç–µ—Ñ–∞–∫—Ç–∏
- –ü–æ–≤–Ω–æ—Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞
- –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤
- Performance –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è

#### –ö—Ä–∏—Ç–µ—Ä—ñ—ó –ø—Ä–∏–π–º–∞–Ω–Ω—è
- –í—Å—ñ features –ø—Ä–∞—Ü—é—é—Ç—å
- Lighthouse > 90
- WCAG 2.1 AA
- –ë–µ–∑–ø–µ–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞

### 13.4 –†–∏–∑–∏–∫–∏ —Ç–∞ –º—ñ—Ç–∏–≥–∞—Ü—ñ—è

| –†–∏–∑–∏–∫ | –ô–º–æ–≤—ñ—Ä–Ω—ñ—Å—Ç—å | –í–ø–ª–∏–≤ | –ú—ñ—Ç–∏–≥–∞—Ü—ñ—è |
|-------|-------------|-------|-----------|
| –ó–∞—Ç—Ä–∏–º–∫–∞ –ø–ª–∞—Ç—ñ–∂–Ω–æ—ó —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó | –°–µ—Ä–µ–¥–Ω—è | –í–∏—Å–æ–∫–∏–π | –†–∞–Ω–Ω—ñ–π –ø–æ—á–∞—Ç–æ–∫, —Ç–µ—Å—Ç–æ–≤–∏–π –∞–∫–∞—É–Ω—Ç Stripe |
| –ü—Ä–æ–±–ª–µ–º–∏ –∑ iOS PWA | –í–∏—Å–æ–∫–∞ | –°–µ—Ä–µ–¥–Ω—ñ–π | Fallback –Ω–∞ web –≤–µ—Ä—Å—ñ—é, –¥–µ—Ç–∞–ª—å–Ω—ñ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó |
| –°–∫–ª–∞–¥–Ω—ñ—Å—Ç—å AI —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—ó | –°–µ—Ä–µ–¥–Ω—è | –°–µ—Ä–µ–¥–Ω—ñ–π | –ü–æ–µ—Ç–∞–ø–Ω–µ –≤–ø—Ä–æ–≤–∞–¥–∂–µ–Ω–Ω—è, –ø–æ—á–∞—Ç–∏ –∑ –ø—Ä–æ—Å—Ç–æ–≥–æ FAQ |
| Performance issues | –ù–∏–∑—å–∫–∞ | –í–∏—Å–æ–∫–∏–π | –ü—Ä–æ—Ñ—ñ–ª—é–≤–∞–Ω–Ω—è, –∫–µ—à—É–≤–∞–Ω–Ω—è, CDN –∑ –ø–æ—á–∞—Ç–∫—É |
| –ë–µ–∑–ø–µ–∫–∞ –º–µ–¥—ñ–∞ –∫–æ–Ω—Ç–µ–Ω—Ç—É | –°–µ—Ä–µ–¥–Ω—è | –í–∏—Å–æ–∫–∏–π | –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è –µ–∫—Å–ø–µ—Ä—Ç—ñ–≤, –≥–æ—Ç–æ–≤—ñ —Ä—ñ—à–µ–Ω–Ω—è |

### 13.5 –ö–æ–º–∞–Ω–¥–∞ —Ç–∞ —Ä–æ–ª—ñ

**Core Team**:
- Tech Lead (1) - –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–∞, –∫–æ–¥-—Ä–µ–≤'—é
- Backend Dev (2) - Django, API, –ø–ª–∞—Ç–µ–∂—ñ
- Frontend Dev (2) - UI/UX, JS, PWA
- DevOps (1) - —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞, CI/CD
- QA Engineer (1) - —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—è

**Extended Team**:
- UI/UX Designer - –¥–∏–∑–∞–π–Ω, –ø—Ä–æ—Ç–æ—Ç–∏–ø–∏
- Content Manager - –Ω–∞–ø–æ–≤–Ω–µ–Ω–Ω—è, —Ç–µ—Å—Ç–∏
- Security Consultant - –∞—É–¥–∏—Ç, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó
- Marketing - –∞–Ω–∞–ª—ñ—Ç–∏–∫–∞, –ø—ñ–∫—Å–µ–ª—ñ

---

## –ü–Ü–î–°–£–ú–û–ö

–¶–µ–π –ø–ª–∞–Ω –∑–∞–±–µ–∑–ø–µ—á—É—î –ø–æ–µ—Ç–∞–ø–Ω—É —Ä–æ–∑—Ä–æ–±–∫—É –ø–æ–≤–Ω–æ—Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—ó –æ—Å–≤—ñ—Ç–Ω—å–æ—ó –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏ Play Vision –∑ —Ñ–æ–∫—É—Å–æ–º –Ω–∞:

1. **–ë–µ–∑–ø–µ–∫—É** - –∑–∞—Ö–∏—Å—Ç –∫–æ–Ω—Ç–µ–Ω—Ç—É, –ø–ª–∞—Ç–µ–∂—ñ–≤, –¥–∞–Ω–∏—Ö
2. **–ú–æ–Ω–µ—Ç–∏–∑–∞—Ü—ñ—é** - –≥–Ω—É—á–∫–∞ —Å–∏—Å—Ç–µ–º–∞ –ø—ñ–¥–ø–∏—Å–æ–∫ —Ç–∞ –ø—Ä–æ–¥–∞–∂—ñ–≤
3. **UX** - –∑—Ä—É—á–Ω–∏–π —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å, —à–≤–∏–¥–∫—ñ—Å—Ç—å, mobile-first
4. **–ú–∞—Å—à—Ç–∞–±–æ–≤–∞–Ω—ñ—Å—Ç—å** - –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –¥–æ —Ä–æ—Å—Ç—É —Ç–∞ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è

–ö–ª—é—á–æ–≤—ñ —Ç–µ—Ö–Ω—ñ—á–Ω—ñ —Ä—ñ—à–µ–Ω–Ω—è:
- Django —è–∫ –Ω–∞–¥—ñ–π–Ω–∏–π backend
- Progressive Enhancement –¥–ª—è frontend
- Stripe –¥–ª—è –±–µ–∑–ø–µ—á–Ω–∏—Ö –ø–ª–∞—Ç–µ–∂—ñ–≤
- HLS + –≤–æ–¥—è–Ω—ñ –∑–Ω–∞–∫–∏ –¥–ª—è –∑–∞—Ö–∏—Å—Ç—É –≤—ñ–¥–µ–æ
- PWA –¥–ª—è mobile experience

–ü–ª–∞–Ω —Ä–æ–∑—Ä–∞—Ö–æ–≤–∞–Ω–∏–π –Ω–∞ 16 —Ç–∏–∂–Ω—ñ–≤ –∞–∫—Ç–∏–≤–Ω–æ—ó —Ä–æ–∑—Ä–æ–±–∫–∏ –∑ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—é –ø–æ–µ—Ç–∞–ø–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫—É —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É.