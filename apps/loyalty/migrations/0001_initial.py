# Generated by Django 5.1.6 on 2025-09-06 19:05

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LoyaltyTier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('points_required', models.PositiveIntegerField(help_text='Points needed to reach this tier')),
                ('discount_percentage', models.PositiveIntegerField(default=0, help_text='Discount percentage for this tier')),
                ('color', models.CharField(default='#666666', help_text='Hex color for UI display', max_length=7)),
                ('benefits', models.JSONField(default=list, help_text='List of tier benefits')),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order')),
            ],
            options={
                'verbose_name': 'Loyalty Tier',
                'verbose_name_plural': 'Loyalty Tiers',
                'db_table': 'loyalty_tiers',
                'ordering': ['order', 'points_required'],
            },
        ),
        migrations.CreateModel(
            name='LoyaltyAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.PositiveIntegerField(default=0)),
                ('lifetime_points', models.PositiveIntegerField(default=0, help_text='Total points earned ever')),
                ('lifetime_spent', models.DecimalField(decimal_places=2, default=0, help_text='Total money spent', max_digits=10)),
                ('tier_achieved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='loyalty_account', to=settings.AUTH_USER_MODEL)),
                ('current_tier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='users', to='loyalty.loyaltytier')),
            ],
            options={
                'verbose_name': 'Loyalty Account',
                'verbose_name_plural': 'Loyalty Accounts',
                'db_table': 'loyalty_accounts',
            },
        ),
        migrations.CreateModel(
            name='PointTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(help_text='Positive for earned, negative for spent')),
                ('transaction_type', models.CharField(choices=[('earned', 'Earned'), ('spent', 'Spent'), ('expired', 'Expired'), ('adjusted', 'Adjusted')], max_length=20)),
                ('reason', models.CharField(help_text='Why points were added/removed', max_length=200)),
                ('reference_type', models.CharField(blank=True, max_length=50)),
                ('reference_id', models.PositiveIntegerField(blank=True, null=True)),
                ('balance_after', models.PositiveIntegerField(help_text='Points balance after this transaction')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='point_transactions', to='loyalty.loyaltyaccount')),
            ],
            options={
                'verbose_name': 'Point Transaction',
                'verbose_name_plural': 'Point Transactions',
                'db_table': 'point_transactions',
                'ordering': ['-created_at'],
            },
        ),
    ]
