# Generated by Django 5.1.6 on 2025-10-26 10:57

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0005_update_speaker_model'),
        ('payments', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EventFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_rating', models.PositiveIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('content_rating', models.PositiveIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('speaker_rating', models.PositiveIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('organization_rating', models.PositiveIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('what_liked', models.TextField(blank=True)),
                ('what_could_improve', models.TextField(blank=True)),
                ('additional_comments', models.TextField(blank=True)),
                ('would_recommend', models.BooleanField()),
                ('would_attend_again', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Event Feedback',
                'verbose_name_plural': 'Event Feedback',
                'db_table': 'event_feedback',
            },
        ),
        migrations.CreateModel(
            name='EventWaitlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('notified', models.BooleanField(default=False)),
                ('notified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Event Waitlist',
                'verbose_name_plural': 'Event Waitlists',
                'db_table': 'event_waitlist',
                'ordering': ['created_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='eventregistration',
            options={'verbose_name': 'Event Registration', 'verbose_name_plural': 'Event Registrations'},
        ),
        migrations.AlterModelOptions(
            name='speaker',
            options={'ordering': ['last_name', 'first_name'], 'verbose_name': 'Speaker', 'verbose_name_plural': 'Speakers'},
        ),
        migrations.RemoveIndex(
            model_name='eventregistration',
            name='event_registrations_user_status_idx',
        ),
        migrations.RenameIndex(
            model_name='event',
            new_name='events_slug_930801_idx',
            old_name='events_slug_idx',
        ),
        migrations.RenameIndex(
            model_name='event',
            new_name='events_status_cd4ad2_idx',
            old_name='events_status_start_datetime_idx',
        ),
        migrations.RenameIndex(
            model_name='event',
            new_name='events_event_t_e1f6e6_idx',
            old_name='events_event_type_status_idx',
        ),
        migrations.RenameIndex(
            model_name='eventticket',
            new_name='event_ticke_ticket__3660cf_idx',
            old_name='event_tickets_ticket_number_idx',
        ),
        migrations.AlterUniqueTogether(
            name='eventregistration',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='event',
            name='benefits',
            field=models.JSONField(blank=True, default=list, help_text='Список переваг події (що отримає учасник)', verbose_name='Що ти отримаєш'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_category',
            field=models.CharField(blank=True, choices=[('football_experts_forum', 'Форум футбольних фахівців'), ('parents_forum', 'Форум футбольних батьків'), ('internships', 'Стажування в професійних клубах'), ('seminars_hackathons', 'Практичні семінари і хакатони'), ('psychology_workshops', 'Воркшопи зі спортивної психології'), ('selection_camps', 'Селекційні табори'), ('online_webinars', 'Онлайн-теорії і вебінари')], help_text='Специфічна категорія події для меню', max_length=50),
        ),
        migrations.AddField(
            model_name='event',
            name='target_audience',
            field=models.JSONField(blank=True, default=list, help_text='Для кого ця подія (цільова аудиторія)', verbose_name='Для кого'),
        ),
        migrations.AddField(
            model_name='event',
            name='ticket_tiers',
            field=models.JSONField(blank=True, default=list, help_text='Тарифи квитків у форматі JSON: [{"name": "STANDARD", "price": 5450, "features": ["..."]}]', verbose_name='Тарифи квитків'),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='attendee_email',
            field=models.EmailField(blank=True, default='', max_length=254),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='attendee_name',
            field=models.CharField(default='', max_length=200),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='attendee_phone',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='company',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='custom_fields',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='dietary_requirements',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='emergency_contact',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='emergency_phone',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='how_did_you_hear',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='marketing_consent',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='notes',
            field=models.TextField(blank=True, help_text='Очікування від події'),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='position',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='special_needs',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='ticket',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='registration', to='events.eventticket'),
        ),
        migrations.AddField(
            model_name='eventticket',
            name='checked_in_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checked_in_tickets', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eventticket',
            name='price',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Ціна квитка на момент покупки', max_digits=10, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='eventticket',
            name='qr_data',
            field=models.TextField(blank=True, help_text='Дані для QR коду'),
        ),
        migrations.AddField(
            model_name='eventticket',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='speaker',
            name='email',
            field=models.EmailField(blank=True, default='', max_length=254, unique=True),
        ),
        migrations.AddField(
            model_name='speaker',
            name='first_name',
            field=models.CharField(default='', max_length=50),
        ),
        migrations.AddField(
            model_name='speaker',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='speaker',
            name='last_name',
            field=models.CharField(default='', max_length=50),
        ),
        migrations.AddField(
            model_name='speaker',
            name='linkedin_url',
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name='speaker',
            name='twitter_url',
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name='speaker',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='speaker',
            name='website_url',
            field=models.URLField(blank=True),
        ),
        migrations.AlterField(
            model_name='event',
            name='is_free',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='event',
            name='price',
            field=models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='eventticket',
            name='qr_code',
            field=models.ImageField(blank=True, upload_to='ticket_qr/'),
        ),
        migrations.AlterField(
            model_name='eventticket',
            name='status',
            field=models.CharField(choices=[('pending', 'Очікує оплати'), ('confirmed', 'Підтверджений'), ('cancelled', 'Скасований'), ('used', 'Використаний'), ('refunded', 'Повернений')], default='pending', max_length=20),
        ),
        migrations.AlterField(
            model_name='eventticket',
            name='used_balance',
            field=models.BooleanField(default=False, help_text='Чи використаний баланс квитків з підписки'),
        ),
        migrations.AlterField(
            model_name='speaker',
            name='bio',
            field=models.TextField(default=''),
        ),
        migrations.AlterField(
            model_name='speaker',
            name='company',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AlterField(
            model_name='speaker',
            name='position',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterUniqueTogether(
            name='eventticket',
            unique_together={('event', 'user')},
        ),
        migrations.AddIndex(
            model_name='eventticket',
            index=models.Index(fields=['event', 'status'], name='event_ticke_event_i_231a46_idx'),
        ),
        migrations.AddIndex(
            model_name='eventticket',
            index=models.Index(fields=['user', 'status'], name='event_ticke_user_id_db87b8_idx'),
        ),
        migrations.AddField(
            model_name='eventfeedback',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='events.event'),
        ),
        migrations.AddField(
            model_name='eventfeedback',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_feedback', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eventwaitlist',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waitlist', to='events.event'),
        ),
        migrations.AddField(
            model_name='eventwaitlist',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_waitlist', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='eventfeedback',
            unique_together={('event', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='eventwaitlist',
            unique_together={('event', 'user')},
        ),
    ]
