from django.core.management.base import BaseCommand
from apps.subscriptions.models import Plan


class Command(BaseCommand):
    help = '–°—Ç–≤–æ—Ä–∏—Ç–∏ 4 —Ç–∞—Ä–∏—Ñ–∏ –ø—ñ–¥–ø–∏—Å–∫–∏ –∑ –∫–æ–ª—å–æ—Ä–∞–º–∏ —Ç–∞ —Å–ª–æ–≥–∞–Ω–∞–º–∏ (C/B/A/PRO-VISION)'

    def handle(self, *args, **options):
        self.stdout.write('–°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∞—Ä–∏—Ñ–Ω—ñ –ø–ª–∞–Ω–∏...\n')
        
        plans_data = [
            {
                'name': 'C-VISION',
                'tier_name': 'c_vision',
                'tier_slogan': '–ó–Ω–∞–π–¥–∏ —Å–≤—ñ–π PRO-VISION',
                'color_indicator': '#3b82f6',  # –°–∏–Ω—ñ–π
                'duration': 'monthly',
                'price': 299.00,
                'features': [
                    '–ë–∞–∑–æ–≤–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç: –¥–æ 50 –≥–æ–¥–∏–Ω –Ω–∞–≤—á–∞–ª—å–Ω–∏—Ö –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤',
                    '–í–∏–±—ñ—Ä–∫–∞ –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤ –¥–ª—è –ø–æ—á–∞—Ç–∫—ñ–≤—Ü—ñ–≤',
                    '–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –∫–æ–º–∞–Ω–¥–∏',
                    '–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∏–π —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç –ø—Ä–æ –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è –∫—É—Ä—Å—ñ–≤',
                    '–î–æ—Å—Ç—É–ø –¥–æ —Å–ø—ñ–ª—å–Ω–æ—Ç–∏',
                ],
                'description': '–ü–æ—á–∞—Ç–∫–æ–≤–∏–π —Ä—ñ–≤–µ–Ω—å –¥–ª—è –∑–Ω–∞–π–æ–º—Å—Ç–≤–∞ –∑ –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ—é',
                'order': 1,
                'is_active': True,
            },
            {
                'name': 'B-VISION',
                'tier_name': 'b_vision',
                'tier_slogan': '–†–æ–∑–≤–∏–≤–∞–π —Å–≤—ñ–π PRO-VISION',
                'color_indicator': '#f97316',  # –ü–æ–º–∞—Ä–∞–Ω—á–µ–≤–∏–π
                'duration': 'monthly',
                'price': 599.00,
                'features': [
                    '–í—Å–µ –∑ C-VISION',
                    '–ü–æ–≤–Ω–∏–π –¥–æ—Å—Ç—É–ø –¥–æ –±–∞–∑–æ–≤–∏—Ö –∫—É—Ä—Å—ñ–≤',
                    '–ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞',
                    '–ó–Ω–∏–∂–∫–∞ 5% –Ω–∞ –ø–æ–∫—É–ø–∫–∏',
                    '–ï–∫—Å–∫–ª—é–∑–∏–≤–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏ —â–æ–º—ñ—Å—è—Ü—è',
                    '–†–∞–Ω—ñ—à–µ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–¥—ñ—ó',
                ],
                'description': '–ü–æ–∫—Ä–∞—â–µ–Ω–∏–π –ø–ª–∞–Ω –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –Ω–∞–≤—á–∞–Ω–Ω—è',
                'order': 2,
                'is_active': True,
            },
            {
                'name': 'A-VISION',
                'tier_name': 'a_vision',
                'tier_slogan': '–í–¥–æ—Å–∫–æ–Ω–∞–ª–∏ —Å–≤—ñ–π PRO-VISION',
                'color_indicator': '#e11d48',  # –ß–µ—Ä–≤–æ–Ω–∏–π
                'duration': 'monthly',
                'price': 999.00,
                'features': [
                    '–í—Å–µ –∑ B-VISION',
                    '–î–æ—Å—Ç—É–ø –¥–æ –≤—Å—ñ—Ö –∫—É—Ä—Å—ñ–≤ —Ç–∞ –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤',
                    '–ú–∞—Ç–µ—Ä—ñ–∞–ª–∏ –ø—Ä–µ–º—ñ—É–º —Ä—ñ–≤–Ω—è + –µ–∫—Å–∫–ª—é–∑–∏–≤',
                    '–ó–Ω–∏–∂–∫–∞ 10% –Ω–∞ –≤—Å—ñ –ø–æ–∫—É–ø–∫–∏',
                    '–î–æ—Å—Ç—É–ø –¥–æ –∑–∞–∫—Ä–∏—Ç–∏—Ö –≤–µ–±—ñ–Ω–∞—Ä—ñ–≤',
                    '–ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –Ω–∞ —ñ–≤–µ–Ω—Ç–∏',
                    '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó 1 —Ä–∞–∑ –Ω–∞ –º—ñ—Å—è—Ü—å',
                ],
                'description': '–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π —Ä—ñ–≤–µ–Ω—å –¥–ª—è —Å–µ—Ä–π–æ–∑–Ω–∏—Ö —Ñ–∞—Ö—ñ–≤—Ü—ñ–≤',
                'order': 3,
                'is_active': True,
            },
            {
                'name': 'PRO-VISION',
                'tier_name': 'pro_vision',
                'tier_slogan': '–¢–∏ —î PRO-VISION',
                'color_indicator': '#ec4899',  # –†–æ–∂–µ–≤–∏–π
                'duration': 'monthly',
                'price': 1499.00,
                'features': [
                    '–í—Å–µ –∑ A-VISION',
                    '–ë–µ–∑–ª—ñ–º—ñ—Ç–Ω–∏–π –¥–æ—Å—Ç—É–ø –¥–æ –≤—Å—ñ—î—ó –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏',
                    '–ó–Ω–∏–∂–∫–∞ 15% –Ω–∞ –≤—Å—ñ –ø–æ–∫—É–ø–∫–∏',
                    '–ë–∞–ª–∞–Ω—Å –∫–≤–∏—Ç–∫—ñ–≤ –Ω–∞ —ñ–≤–µ–Ω—Ç–∏ (3 –∫–≤–∏—Ç–∫–∏/–º—ñ—Å—è—Ü—å)',
                    '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏–π –º–µ–Ω—Ç–æ—Ä-–∫–æ—É—á',
                    '–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∞ —Ç—Ä–∞—î–∫—Ç–æ—Ä—ñ—è —Ä–æ–∑–≤–∏—Ç–∫—É',
                    '–î–æ—Å—Ç—É–ø –¥–æ –∑–∞–∫—Ä–∏—Ç–æ—ó —Å–ø—ñ–ª—å–Ω–æ—Ç–∏ PRO',
                    '–ú–æ–∂–ª–∏–≤—ñ—Å—Ç—å —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –≤–ª–∞—Å–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç',
                ],
                'description': '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä—ñ–≤–µ–Ω—å –¥–ª—è –µ–ª—ñ—Ç–∏',
                'order': 4,
                'is_active': True,
            },
        ]
        
        created_count = 0
        updated_count = 0
        
        for data in plans_data:
            # –°—Ç–≤–æ—Ä—é—î–º–æ features —è–∫ JSON
            features_json = data.pop('features')
            
            plan, created = Plan.objects.update_or_create(
                tier_name=data['tier_name'],
                defaults={**data, 'features': features_json}
            )
            
            if created:
                created_count += 1
                self.stdout.write(self.style.SUCCESS(f'‚úì –°—Ç–≤–æ—Ä–µ–Ω–æ –ø–ª–∞–Ω: {data["name"]}'))
            else:
                updated_count += 1
                self.stdout.write(f'  –û–Ω–æ–≤–ª–µ–Ω–æ –ø–ª–∞–Ω: {data["name"]}')
        
        self.stdout.write('')
        self.stdout.write(self.style.SUCCESS(f'‚úÖ –ì–æ—Ç–æ–≤–æ! –°—Ç–≤–æ—Ä–µ–Ω–æ: {created_count}, –û–Ω–æ–≤–ª–µ–Ω–æ: {updated_count}'))
        self.stdout.write('')
        self.stdout.write('üí° –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–ª–∞–Ω–∏ –≤ Django Admin:')
        self.stdout.write('   http://localhost:8000/admin/subscriptions/plan/')

