# Generated by Django 5.1.6 on 2025-09-06 16:44

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('duration', models.CharField(choices=[('1_month', '1 місяць'), ('3_months', '3 місяці'), ('12_months', '12 місяців')], max_length=20)),
                ('duration_months', models.PositiveIntegerField(help_text='Duration in months')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('features', models.JSONField(default=list, help_text='List of plan features')),
                ('event_tickets_balance', models.IntegerField(default=0, help_text='Monthly event tickets for Pro-Vision')),
                ('discount_percentage', models.IntegerField(default=0, help_text='Loyalty discount percentage')),
                ('is_popular', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('badge_text', models.CharField(blank=True, help_text='e.g. "Найпопулярніший"', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Subscription Plan',
                'verbose_name_plural': 'Subscription Plans',
                'db_table': 'subscription_plans',
                'ordering': ['display_order', 'duration_months'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('trial', 'Trial'), ('active', 'Active'), ('paused', 'Paused'), ('past_due', 'Past Due'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], default='active', max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('trial_end_date', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('auto_renew', models.BooleanField(default=True)),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=100)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='subscriptions.plan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Subscription',
                'verbose_name_plural': 'Subscriptions',
                'db_table': 'subscriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Entitlement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('course', 'Course'), ('event', 'Event'), ('feature', 'Feature')], max_length=50)),
                ('content_id', models.IntegerField(blank=True, help_text='ID of specific content, null for all', null=True)),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entitlements', to='subscriptions.subscription')),
            ],
            options={
                'verbose_name': 'Entitlement',
                'verbose_name_plural': 'Entitlements',
                'db_table': 'entitlements',
            },
        ),
        migrations.CreateModel(
            name='TicketBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(default=0)),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_balances', to='subscriptions.subscription')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_balances', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ticket Balance',
                'verbose_name_plural': 'Ticket Balances',
                'db_table': 'ticket_balances',
                'ordering': ['expires_at'],
            },
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['user', 'status'], name='subscriptio_user_id_8d58fd_idx'),
        ),
        migrations.AddIndex(
            model_name='subscription',
            index=models.Index(fields=['end_date'], name='subscriptio_end_dat_763002_idx'),
        ),
        migrations.AddIndex(
            model_name='entitlement',
            index=models.Index(fields=['subscription', 'content_type'], name='entitlement_subscri_ce43c8_idx'),
        ),
    ]
