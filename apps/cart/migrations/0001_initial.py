# Generated by Django 5.1.6 on 2025-09-06 16:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, help_text='For anonymous users', max_length=40)),
                ('suggestion_shown', models.BooleanField(default=False, help_text='Track if subscription suggestion was shown')),
                ('suggestion_shown_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='carts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cart',
                'verbose_name_plural': 'Carts',
                'db_table': 'carts',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_type', models.CharField(choices=[('course', 'Course'), ('subscription', 'Subscription'), ('event_ticket', 'Event Ticket')], max_length=20)),
                ('item_id', models.PositiveIntegerField()),
                ('item_name', models.CharField(max_length=200)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='cart.cart')),
            ],
            options={
                'verbose_name': 'Cart Item',
                'verbose_name_plural': 'Cart Items',
                'db_table': 'cart_items',
                'ordering': ['-added_at'],
            },
        ),
        migrations.CreateModel(
            name='CartRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommended_type', models.CharField(choices=[('course', 'Course'), ('subscription', 'Subscription'), ('event_ticket', 'Event Ticket')], max_length=20)),
                ('recommended_id', models.PositiveIntegerField()),
                ('recommended_name', models.CharField(max_length=200)),
                ('reason', models.CharField(help_text='Why this is recommended', max_length=200)),
                ('score', models.FloatField(default=0, help_text='Recommendation score')),
                ('cart_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='cart.cartitem')),
            ],
            options={
                'verbose_name': 'Cart Recommendation',
                'verbose_name_plural': 'Cart Recommendations',
                'db_table': 'cart_recommendations',
                'ordering': ['-score'],
            },
        ),
        migrations.AddIndex(
            model_name='cart',
            index=models.Index(fields=['user'], name='carts_user_id_b1c689_idx'),
        ),
        migrations.AddIndex(
            model_name='cart',
            index=models.Index(fields=['session_key'], name='carts_session_2c783d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cartitem',
            unique_together={('cart', 'item_type', 'item_id')},
        ),
        migrations.AlterUniqueTogether(
            name='cartrecommendation',
            unique_together={('cart_item', 'recommended_type', 'recommended_id')},
        ),
    ]
