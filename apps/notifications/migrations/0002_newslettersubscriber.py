# Generated by Django 5.1.6 on 2025-10-26 10:57

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models, connection


def create_newsletter_table_if_not_exists(apps, schema_editor):
    """Створює таблицю newsletter_subscribers тільки якщо вона не існує"""
    db_alias = schema_editor.connection.alias
    
    with connection.cursor() as cursor:
        # Перевіряємо чи існує таблиця
        if connection.vendor == 'postgresql':
            cursor.execute("""
                SELECT EXISTS (
                    SELECT FROM information_schema.tables 
                    WHERE table_schema = 'public' 
                    AND table_name = 'newsletter_subscribers'
                )
            """)
            table_exists = cursor.fetchone()[0]
        else:
            # SQLite
            cursor.execute("""
                SELECT name FROM sqlite_master 
                WHERE type='table' AND name='newsletter_subscribers'
            """)
            table_exists = cursor.fetchone() is not None
        
        if table_exists:
            print("Table newsletter_subscribers already exists, skipping creation")
        else:
            print("Table newsletter_subscribers does not exist, will be created by model operation")


class Migration(migrations.Migration):

    dependencies = [
        ('notifications', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RunPython(create_newsletter_table_if_not_exists, migrations.RunPython.noop),
        migrations.CreateModel(
            name='NewsletterSubscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name="Ім'я")),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('status', models.CharField(choices=[('active', 'Активний'), ('unsubscribed', 'Відписався'), ('bounced', 'Відмова доставки'), ('complaint', 'Скарга')], default='active', max_length=20)),
                ('source', models.CharField(choices=[('footer_form', 'Футер сайту'), ('popup', 'Спливаюче вікно'), ('checkout', 'Форма оплати'), ('registration', 'Реєстрація'), ('manual', 'Ручне додавання')], default='footer_form', max_length=50)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True)),
                ('last_sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Остання розсилка')),
                ('emails_sent', models.PositiveIntegerField(default=0)),
                ('emails_opened', models.PositiveIntegerField(default=0)),
                ('emails_clicked', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='newsletter_subscription', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Підписник розсилки',
                'verbose_name_plural': 'Підписники розсилки',
                'db_table': 'newsletter_subscribers',
                'ordering': ['-subscribed_at'],
                'indexes': [models.Index(fields=['email', 'status'], name='newsletter__email_6932db_idx'), models.Index(fields=['status', 'subscribed_at'], name='newsletter__status_9a2b7e_idx')],
            },
        ),
    ]
