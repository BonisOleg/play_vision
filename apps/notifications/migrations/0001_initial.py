# Generated by Django 5.1.6 on 2025-09-06 19:05

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('subject', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('html_content', models.TextField(blank=True)),
                ('target_all_users', models.BooleanField(default=False)),
                ('target_subscribers', models.BooleanField(default=False)),
                ('target_inactive_users', models.BooleanField(default=False)),
                ('target_loyalty_tiers', models.JSONField(default=list, help_text='Цільові рівні лояльності')),
                ('status', models.CharField(choices=[('draft', 'Чернетка'), ('scheduled', 'Заплановано'), ('sending', 'Відправляється'), ('sent', 'Відправлено'), ('paused', 'Призупинено'), ('cancelled', 'Скасовано')], default='draft', max_length=20)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('total_recipients', models.PositiveIntegerField(default=0)),
                ('sent_count', models.PositiveIntegerField(default=0)),
                ('delivered_count', models.PositiveIntegerField(default=0)),
                ('opened_count', models.PositiveIntegerField(default=0)),
                ('clicked_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_campaigns', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Campaign',
                'verbose_name_plural': 'Email Campaigns',
                'db_table': 'email_campaigns',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('html_content', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Очікує відправки'), ('sent', 'Відправлено'), ('delivered', 'Доставлено'), ('read', 'Прочитано'), ('failed', 'Помилка'), ('cancelled', 'Скасовано')], default='pending', max_length=20)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('scheduled_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('variables', models.JSONField(default=dict, help_text='Змінні для рендерингу')),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(choices=[('created', 'Створено'), ('sent', 'Відправлено'), ('delivered', 'Доставлено'), ('opened', 'Відкрито'), ('clicked', 'Клікнуто'), ('failed', 'Помилка')], max_length=50)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('error_message', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='notifications.notification')),
            ],
            options={
                'verbose_name': 'Notification Log',
                'verbose_name_plural': 'Notification Logs',
                'db_table': 'notification_logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_enabled', models.BooleanField(default=True)),
                ('push_enabled', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=False)),
                ('marketing_emails', models.BooleanField(default=True)),
                ('course_updates', models.BooleanField(default=True)),
                ('event_reminders', models.BooleanField(default=True)),
                ('mentoring_notifications', models.BooleanField(default=True)),
                ('payment_notifications', models.BooleanField(default=True)),
                ('loyalty_updates', models.BooleanField(default=True)),
                ('quiet_hours_start', models.TimeField(default='22:00', help_text='Початок тихих годин')),
                ('quiet_hours_end', models.TimeField(default='08:00', help_text='Кінець тихих годин')),
                ('timezone', models.CharField(default='Europe/Kyiv', max_length=50)),
                ('digest_frequency', models.CharField(choices=[('never', 'Ніколи'), ('daily', 'Щодня'), ('weekly', 'Щотижня'), ('monthly', 'Щомісяця')], default='weekly', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Preference',
                'verbose_name_plural': 'Notification Preferences',
                'db_table': 'notification_preferences',
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('notification_type', models.CharField(choices=[('welcome', 'Привітання нового користувача'), ('survey_reminder', 'Нагадування про анкету'), ('course_purchased', 'Курс придбано'), ('subscription_activated', 'Підписка активована'), ('subscription_expires', 'Підписка закінчується'), ('event_reminder', 'Нагадування про івент'), ('mentoring_scheduled', 'Ментор-сесія заплановано'), ('payment_successful', 'Успішна оплата'), ('payment_failed', 'Помилка оплати'), ('tier_upgrade', 'Підвищення рівня лояльності')], max_length=50)),
                ('channel', models.CharField(choices=[('email', 'Email'), ('push', 'Push-сповіщення'), ('sms', 'SMS'), ('in_app', 'В додатку')], max_length=20)),
                ('subject_template', models.CharField(help_text='Тема (для email) або заголовок', max_length=200)),
                ('content_template', models.TextField(help_text='Основний контент з плейсхолдерами')),
                ('html_template', models.TextField(blank=True, help_text='HTML версія для email')),
                ('is_active', models.BooleanField(default=True)),
                ('is_required', models.BooleanField(default=False, help_text="Обов'язкове сповіщення")),
                ('delay_minutes', models.PositiveIntegerField(default=0, help_text='Затримка перед відправкою')),
                ('use_user_timezone', models.BooleanField(default=True)),
                ('variables', models.JSONField(default=list, help_text='Доступні змінні для шаблону')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
                'db_table': 'notification_templates',
                'unique_together': {('notification_type', 'channel')},
            },
        ),
        migrations.AddField(
            model_name='notification',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='notifications.notificationtemplate'),
        ),
        migrations.CreateModel(
            name='PushSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endpoint', models.URLField(help_text='Push endpoint URL')),
                ('p256dh', models.CharField(help_text='P256DH ключ', max_length=200)),
                ('auth', models.CharField(help_text='Auth ключ', max_length=200)),
                ('user_agent', models.TextField(blank=True)),
                ('browser', models.CharField(blank=True, max_length=50)),
                ('device_type', models.CharField(blank=True, choices=[('desktop', 'Desktop'), ('mobile', 'Mobile'), ('tablet', 'Tablet')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('error_count', models.PositiveIntegerField(default=0)),
                ('last_error', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='push_subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Push Subscription',
                'verbose_name_plural': 'Push Subscriptions',
                'db_table': 'push_subscriptions',
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'status'], name='notificatio_user_id_8ab96f_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['scheduled_at', 'status'], name='notificatio_schedul_c045c8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='pushsubscription',
            unique_together={('user', 'endpoint')},
        ),
    ]
