# Generated by Django 5.1.6 on 2025-09-06 19:05

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIAccessPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('guest', 'Гість'), ('registered', 'Зареєстрований'), ('subscriber_l1', 'Підписник L1'), ('subscriber_l2', 'Підписник L2'), ('admin', 'Адміністратор')], max_length=20, unique=True)),
                ('max_response_length', models.PositiveIntegerField(help_text='Максимальна довжина відповіді')),
                ('max_queries_per_day', models.PositiveIntegerField(help_text='Максимум запитів на день')),
                ('max_queries_per_hour', models.PositiveIntegerField(help_text='Максимум запитів на годину')),
                ('include_links', models.BooleanField(default=False, help_text='Чи включати посилання')),
                ('show_previews', models.BooleanField(default=False, help_text='Чи показувати превью контенту')),
                ('access_premium_content', models.BooleanField(default=False, help_text='Доступ до преміум контенту')),
                ('cta_message', models.CharField(blank=True, help_text='Повідомлення з закликом до дії', max_length=200)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'AI Access Policy',
                'verbose_name_plural': 'AI Access Policies',
                'db_table': 'ai_access_policies',
            },
        ),
        migrations.CreateModel(
            name='AIConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('llm_provider', models.CharField(choices=[('openai', 'OpenAI'), ('anthropic', 'Anthropic'), ('local', 'Local Model')], default='openai', max_length=50)),
                ('llm_model', models.CharField(default='gpt-3.5-turbo', max_length=100)),
                ('api_key', models.CharField(blank=True, max_length=200)),
                ('vector_store_provider', models.CharField(choices=[('chroma', 'ChromaDB'), ('pinecone', 'Pinecone'), ('weaviate', 'Weaviate')], default='chroma', max_length=50)),
                ('vector_store_config', models.JSONField(default=dict)),
                ('is_enabled', models.BooleanField(default=True)),
                ('maintenance_mode', models.BooleanField(default=False)),
                ('maintenance_message', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'AI Configuration',
                'verbose_name_plural': 'AI Configuration',
                'db_table': 'ai_configuration',
            },
        ),
        migrations.CreateModel(
            name='AIPromptTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(help_text='Опис призначення шаблону')),
                ('system_prompt', models.TextField(help_text='Системний промпт')),
                ('user_prompt_template', models.TextField(help_text='Шаблон користувацького промпту з плейсхолдерами')),
                ('max_tokens', models.PositiveIntegerField(default=1000)),
                ('temperature', models.FloatField(default=0.7, help_text='Творчість відповіді (0-1)')),
                ('access_levels', models.JSONField(default=list, help_text='Рівні доступу, для яких доступний шаблон')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'AI Prompt Template',
                'verbose_name_plural': 'AI Prompt Templates',
                'db_table': 'ai_prompt_templates',
            },
        ),
        migrations.CreateModel(
            name='AIQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(help_text='ID сесії для анонімних користувачів', max_length=100)),
                ('query', models.TextField(help_text='Запит користувача')),
                ('response', models.TextField(help_text='Відповідь AI')),
                ('user_access_level', models.CharField(default='guest', max_length=20)),
                ('context_sources', models.JSONField(default=list, help_text='Джерела, використані для відповіді')),
                ('response_time_ms', models.PositiveIntegerField(help_text='Час відгуку в мілісекундах')),
                ('tokens_used', models.PositiveIntegerField(default=0)),
                ('user_rating', models.PositiveIntegerField(blank=True, help_text='Оцінка від 1 до 5', null=True)),
                ('user_feedback', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ai_queries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI Query',
                'verbose_name_plural': 'AI Queries',
                'db_table': 'ai_queries',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='KnowledgeBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content_type', models.CharField(choices=[('course', 'Курс'), ('lesson', 'Урок'), ('article', 'Стаття'), ('faq', 'FAQ'), ('manual', 'Інструкція')], max_length=20)),
                ('content_id', models.PositiveIntegerField(blank=True, help_text="ID пов'язаного контенту", null=True)),
                ('content', models.TextField(help_text='Текст для векторного пошуку')),
                ('metadata', models.JSONField(default=dict, help_text='Додаткові метадані')),
                ('access_level', models.CharField(choices=[('public', 'Публічний'), ('registered', 'Зареєстровані'), ('subscriber', 'Підписники'), ('premium', 'Преміум')], default='public', max_length=20)),
                ('is_indexed', models.BooleanField(default=False)),
                ('vector_id', models.CharField(blank=True, help_text='ID у векторній базі', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Knowledge Base Entry',
                'verbose_name_plural': 'Knowledge Base Entries',
                'db_table': 'ai_knowledge_base',
                'indexes': [models.Index(fields=['content_type', 'content_id'], name='ai_knowledg_content_3c21f6_idx'), models.Index(fields=['access_level'], name='ai_knowledg_access__0d57c7_idx')],
            },
        ),
        migrations.CreateModel(
            name='AIFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('helpful', 'Корисно'), ('not_helpful', 'Не корисно'), ('incorrect', 'Неправильно'), ('incomplete', 'Неповно'), ('offensive', 'Образливо')], max_length=20)),
                ('comment', models.TextField(blank=True, help_text='Додатковий коментар')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('query', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='ai.aiquery')),
            ],
            options={
                'verbose_name': 'AI Feedback',
                'verbose_name_plural': 'AI Feedback',
                'db_table': 'ai_feedback',
                'unique_together': {('query', 'feedback_type')},
            },
        ),
    ]
